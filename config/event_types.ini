;0
[Reinforcement]
help=A Carryall will enter the map, land and drop the specified units (up to a maximum of 25) at the specified coordinates._On easy difficulty, only the odd units (first, third, etc.) will be dropped for enemy and neutral sides._Only up to 10 deliveries can happen for one side at the same time. Adding more deliveries will crash the game with an error message.
coord0.name=Position
coord0.help=Target map coordinates. If the tile is occupied by a unit or building, or does not allow units to be moved on, the carryall will try to land on the nearest free tile.
coord0.type=Point
coord0.marker=R
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg1.name=Amount
arg1.help=Amount of units to be delivered. This is set automatically when you add units to the list and cannot be changed manually. However, you can use a variable to dynamically define number of units to be delivered.
arg1.type=Number
arg1.readonly=1
arg2.name=Tag
arg2.help=Delivered units will be assigned this tag.
arg2.type=Number
arg2.maxval=255
arg4.name=Deploy action
arg4.help=Valid only if side has enabled AI, otherwise units will stand still after being dropped._Guard: Units will remain where they are dropped and will be set to guard._Attack: Units will attack the nearest enemy._Retreat: Units will retreat to base and become free to be assigned to whatever task the AI needs them for (base defense, attacks, etc.)._Stay: Units will remain where they are dropped and won't be set to guard.
arg4.type=List
arg4.list=Custom
arg4.values=Guard;Attack;Retreat;Stay
arg5.name=Delay
arg5.help=Number of ticks the delivery is delayed from when the event is executed. The delivery slot keeps being used during this time! Account for this to avoid the "max deliveries" crash.
arg5.type=BigNumber
data=UnitList
contents=(Tag: %a2 Delay: %a5 Action: %a4) (%a1): %s

;1
[Starport Delivery]
help=A frigate will enter the map (only if a Starport is present for the assigned side) and will deliver the specified units to the primary Starport._On easy difficulty, only the odd units (first, third, etc.) will be dropped for enemy and neutral sides._Only up to 10 deliveries can happen for one side at the same time. Adding more deliveries will crash the game with an error message._If the side has AI, then units will become free to be assigned whatever task the AI needs them for.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg1.name=Amount
arg1.help=Amount of units to be delivered. This is set automatically when you add units to the list and cannot be changed manually. However, you can use a variable to dynamically define number of units to be delivered.
arg1.type=Number
arg1.readonly=1
arg2.name=Tag
arg2.help=Delivered units will be assigned this tag.
arg2.type=Number
arg2.maxval=255
arg5.name=Delay
arg5.help=Number of ticks the delivery is delayed from when the event is executed. The delivery slot keeps being used during this time! Account for this to avoid the "max deliveries" crash.
arg5.type=BigNumber
data=UnitList
contents=(Tag: %a2 Delay: %a5) (%a1): %s

;2
[Allegiance]
help=Change diplomacy of the source side towards the target side._This is only a one-sided change of diplomacy! If you want to change it in both directions, set the "Both-sided" option. 
arg0.name=Source
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Target
arg2.type=List
arg2.list=Item
arg2.list_type=Sides
arg3.name=Allegiance
arg3.type=List
arg3.list=Custom
arg3.values=Ally;Enemy;Neutral
arg4.name=Both-sided
arg4.type=Bool
contents=%a0 -> %a2 (%a3) %a4 

;3
[Leave]
help=The buildings and units of the side selected will explode. No other new units belonging to the side can enter the game, not even through Reinforcements events.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides

;4
[Berserk]
help=The side selected will sell all of its buildings (if there are any) and send all its units against the enemy. The side must have an enabled AI for this to work.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides

;5
[Play Sound]
help=A sound effect or voice line is played._A global sound is played at full SFX volume always on the main channel where all voice lines and other global sound effects normally play. Only one global sound can be played at a time. Global sounds are queued and will play after the previous sound finishes._Point sounds originate at the specified coordinates and will play at full SFX volume if the origin is on-screen. Otherwise, it will be attenuated and panned based on direction and distance from the viewport._"Full SFX volume" refers to whatever the player has SFX volume set to in the game's settings.
coord0.name=Position
coord0.type=Point
coord0.marker=s
coord0.showif=4=1
arg3.name=Force
arg3.help=Forcefully end the currently playing global sound and play this one instead.
arg3.type=Bool
arg3.showif=4=0
arg4.name=Scope
arg4.type=Switch
arg4.values=Global;Point
arg5.name=Sound
arg5.type=List
arg5.list=Item
arg5.list_type=Sounds
contents=%a5 %a3(%a4)

;6
[Set Build Rate]
help=Changes the UnitBuildRate property (see AI help) of the selected side to a new value. The change takes effect immediately.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg3.name=Operation
arg3.type=List
arg3.list=Game
arg3.list_type=ValueOperation
arg5.name=Build rate
arg5.type=BigNumber
contents=%a3 %a5

;7
[Set Attack Building Rate]
help=Changes the TimeBetweenBuildingAttacks property (see AI help) of the selected side to a new value. The change takes effect after the next attack.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg3.name=Operation
arg3.type=List
arg3.list=Game
arg3.list_type=ValueOperation
arg5.name=Attack rate
arg5.type=BigNumber
contents=%a3 %a5

;8
[Set Cash]
help=Changes the amount of credits for the selected side to a new value. If a side is given extra credits, those are added as cash.__Use in combination with event type 40, Transfer Credits, to add some other form of currency.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg3.name=Operation
arg3.type=List
arg3.list=Game
arg3.list_type=ValueOperation
arg5.name=Cash
arg5.type=BigNumber
contents=%a3 %a5

;9
[Set Tech]
help=Changes the tech level of the selected side to a new value._The default behavior is that new sidebar options will not become available until a new building is built or sold, or until an upgrade has finished. New upgrades become available immediately._To make new sidebar options appear immediately when event is executed, use the "Imm. update" option._Setting the tech level down will not affect building options unless the side loses all its ConYards, or "buildingsAlwaysNeedPrerequisites" rule is set.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg3.name=Operation
arg3.type=List
arg3.list=Game
arg3.list_type=ValueOperation
arg4.name=Imm. update
arg4.type=Bool
arg5.name=Tech
arg5.type=BigNumber
contents=%a3 %a5 %a4

;10
[Mission Win]
help="Mission Accomplished" text line appears on-screen and the game ends in victory.

;11
[Mission Fail]
help="Mission Failed" text line appears on-screen and the game ends in defeat.

;12
[Switch My Side]
help=Switches the side the player controls. 
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg3.name=Switch AI
arg3.type=List
arg3.list=Custom
arg3.values=Keep AI state;Disable target AI;Enable source AI;Disable/enable both
arg3.default=3
arg3.help=How the current player-controlled side's and target side's AI is changed._"Keep AI state" preserves if the AI is enabled or not for both the current and target side._"Disable target AI" switches the AI off for the side the player assumes control of._"Enable source AI" switches the AI on for the side the player originally controlled._"Disable/enable both" enables AI for the side the player originally controlled and disables it for the side player takes control of. This is the recommended and most useful option.
arg4.name=Reveal base
arg4.type=Bool
arg4.help=Reveal the structures of the side the player swaps to.
contents=%a3 %a4

;13
[Hide Map]
help=Conceals the entire map in shroud.

;14
[Reveal Map]
help=An area around the specified X and Y coordinates is revealed to all players.
coord0.name=Position
coord0.type=Point
coord0.marker=M
coord0.showif=1>0
arg1.name=Radius
arg1.help=Maximum is 7 tiles. If set to 0, the whole map will be revealed.
arg1.type=Number
arg1.maxval=7
contents=Radius = %a1

;15
[Set Timer]
help=A countdown timer appears at the top-right corner of the battlefield screen with the time specified._The time is measured in ticks. 25 ticks = 1 in-game second, 1500 ticks = 1 in-game minute._At maximum game speed, roughly 0.4 real seconds passes for every 1 in-game second._After reaching 0 seconds, the countdown timer disappears._Setting a negative integer (except "-1") starts a negative timer that functions to count up instead of down.
arg3.name=Operation
arg3.type=List
arg3.list=Game
arg3.list_type=ValueOperation
arg5.name=Time
arg5.type=BigNumber
contents=%a3 %a5

;16
[Hide Timer]
help=If there is any timer shown on-screen, it will disappear.

;17
[Show Message]
help=Shows an in-game text message at the specified position._You can either use any pre-defined text from the TEXT.UIB table by Message ID, or use a custom text. Remember that each unique custom text must use a unique Message ID, and it will overwrite the original text from TEXT.UIB with the same ID._You can use variables within a text. To refer to variables in the text of the message, use the @ symbol. The first @ symbol will refer to variable 1, the second @ refers to variable 2 and so on._You can change text color within a message. Use the special color-changing character ^ followed by a number 0-9 or letter A-F to select one of 16 different colors.
coord0.name=Offset
coord0.showif=1>0
coord0.maxval=255
arg0.name=Ref. ID
arg0.type=Number
arg0.maxval=31
arg0.help=Used to give messages unique slot. You can refer to Ref. ID in event types like 37 "Remove Message", or overwrite the currently shown message using the same ID.
arg1.name=Screen pos.
arg1.type=List
arg1.list=Custom
arg1.values=Chat;Top Left L;Top Left R;Top Center;Top Right L;Top Right R;Middle U Left L;Middle U Left R;Middle U Center;Middle U Right L;Middle U Right R;Middle D Left L;Middle D Left R;Middle D Center;Middle D Right L;Middle D Right R;Bottom Left L;Bottom Left R;Bottom Center;Bottom Right L;Bottom Right R
arg1.help=Where the message will appear on screen._"Chat" is the default behavior, messages will appear in top-left and scroll down when new messages appear._Other options are different combinations of the vertical position, vertical alignment, horizontal position and horizontal alignment. Use in combination with the "Offset" parameter to pixel-precisely position the message on screen.
arg2.name=Color
arg2.type=List
arg2.list=Custom
arg2.values=Red;Green flashing;Yellow;Cyan;Magenta;Green;Blue;Grey;Side 0;Side 1;Side 2;Side 3;Side 4;Side 5;Side 6;Side 7
arg2.help=The text color of the message. Pick a color from 16-color palette. The palette of colors can be changed and customized with event 38 "Set Message Color".
arg3.name=Sound mode
arg3.type=List
arg3.list=Custom
arg3.values=Default sound;No sound;Custom sound;Custom snd. force
arg3.help=Sound can be played to accompany a message. Sound is played in the global channel._"Default sound" is the basic vanilla message/chat sound. "No sound" shows the message without any sound. "Custom sound" can be any sound from the sound list, such as a custom voiceover reading out the text in the message. "Custom snd. force" forcefully ends the currently playing sound in the global channel before it plays a new sound.
arg4.name=Type on
arg4.type=Bool
arg4.help=Make the letters in the message appear one at a time. Normally, the whole message appears at once.
arg5.name=Duration
arg5.type=BigNumber
arg5.help=For how many ticks the message is shown on screen. A duration of 0 will default to the vanilla setting of 400 ticks for messages with Ref. ID 0. For messages with non-zero Ref. ID, the duration will be infinity, and such messages can be removed or overwritten with other events.
arg6.name=Sound
arg6.type=List
arg6.list=Item
arg6.list_type=Sounds
arg6.showif=3>1
data=Message
contents=%a0 %a1 %c0%a4%a6%s

;18
[Unit Spawn]
help=Spawns units instantly around the designated coordinates for the specified side. If possible, the first unit is spawned in the adjecent tile to the left, and next units are spawned in a circle in the counterclockwise direction._If the side has AI, then units will become free to be assigned whatever task the AI needs them for.
coord0.name=Position
coord0.type=Point
coord0.marker=S
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg1.name=Amount
arg1.help=Amount of units to be spawned in. This is set automatically when you add units to the list and cannot be changed manually. However, you can use a variable to dynamically define number of units to be spawned.
arg1.type=Number
arg1.readonly=1
arg3.name=Facing
arg3.help=Determines which direction the spawned units will point when they appear.
arg3.type=List
arg3.list=Custom
arg3.values=Up;Up-Right;Right;Down-Right;Down;Down-Left;Left;Up-Left
arg5.name=Tag
arg5.help=Spawned units will be assigned this tag.
arg5.type=Number
arg5.maxval=255
data=UnitList
contents=Facing %a3 Tag %a5 (%a1): %s

;19
[Set Flag]
help=Changes the state of target condition, which must be of type 9 "Flag". Flag conditions are used as boolean flags for controlling other events. By default, flags are set to false.__The Flags are mainly useful in vanilla missions, in custom missions they are not that much needed. Flags which were used to make sure an event will trigger only once can be replaced with the "Auto-block" event setting. Flags remain useful for controlling more complex sets of events or for unusual setups like Harvester replacements.
arg0.name=Condition
arg0.type=Number
arg0.reference=Condition
arg0.maxval=255
arg5.name=Value
arg5.type=Switch
arg5.values=False;True
contents=%a0 = %a5

;20
[Un/block Event]
help=Blocks events from running, or unblocks events to allow them to run again.__Events can be set to start blocked or automatically block themselves after running once via the "Blocked" and "Auto-block" checkboxes respectively.
arg4.name=Operation
arg4.type=Switch
arg4.values=Unblock;Block
arg5.name=Event
arg5.type=Number
arg5.maxval=1023
arg5.reference=Event
contents=%a4 %a5

;21
[Play Music]
help=Plays the desired music track.__Although you must input the file name and extension directly, it's possible to play something from the GAMESFX folder in the dedicated music channel.
data=Music
contents=%s

;22
[Damage Tiles]
help=Damages the tile at the attached coordinates with a weapon belonging to the designated side.
coord0.name=Position
coord0.type=Point
coord0.marker=D
coord0.help=Coordinates of the target tile.
coord2.name=Pixel position
coord2.maxval=31
coord2.default=16
coord2.help=Pixel-precise subcoordinates within the target tile. The default value is 16,16 and puts the attack in the middle of the 32x32 tile where the event fires._Note: If Position (above) is set to 0,0 you can use variables on Pixel position to define global pixel coordinates around the whole map. 
coord3.name=Rand. spread
coord3.maxval=255
coord3.help=Measured in pixels, randomly offsets the point at which damage is dealt from the specified position to simulate inaccuracy. The horizontal and vertical offset may be different.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg0.help=The side the damage is caused by.
arg2.name=Weapon
arg2.type=List
arg2.list=Item
arg2.list_type=Weapons
arg2.help=Weapon used to cause the damage.
arg3.name=Spread type
arg3.type=Switch
arg3.values=Square;Circle
arg3.help=Determines if the shape of random spread is a square or a circle.
arg4.name=Hit explosion
arg4.type=Bool
arg4.help=Shows the visual effect and sound of the weapon's "Hit explosion" at target position.
contents=%a2 (Pixel: %c2 Spread: %c3) %a4

;23
[Add Unit]
help=Adds a unit at the attached coordinates. Unlike event type 18 "Unit Spawn", Add Unit does not force the unit to spawn. The unit may not spawn at all if the tile is occupied by another unit. The unit may spawn inside a structure.
coord0.name=Position
coord0.type=Point
coord0.marker=U
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg1.name=Stealth
arg1.type=Bool
arg2.name=Unit type
arg2.type=List
arg2.list=Item
arg2.list_type=Units
arg3.name=Movement
arg3.type=List
arg3.list=Custom
arg3.values=None;Random;Up-Left;Up;Up-Right;Right;Down-Right;Down;Down-Left;Left
arg3.help=Makes the unit move in the selected direction after spawning. Overrides Facing.
arg4.name=Facing
arg4.type=List
arg4.list=Custom
arg4.values=Up;Up-Right;Right;Down-Right;Down;Down-Left;Left;Up-Left
arg4.showif=3=0
arg4.help=Tells the unit which direction to point after spawning.
arg5.name=Tag
arg5.type=Number
arg5.maxval=255
arg5.help=Assigns the given tag to the spawned unit.
arg6.name=Target var.
arg6.type=Variable
arg6.help=Stores the spawned unit's index into the designated variable. It can be referred to in other events via this variable._If you do not need to use this, simply leave the default value (variable 0). However, be cautious that this event may change the variable value if you use that variable for some purpose. Especially be cautious if you use this event inside a hook, where several variables from the beginning (variable 0, 1 etc.) are used for a specific purpose. In that case, use some safe variable which is not used by the hook.
contents=%a6 = %a2 %a1(Move: %a3  Facing: %a4  Tag: %a5)

;24
[Add Building]
help=Spawns the specified building at the attached coordinates. The coordinates are the top left-most tile the structure occupies.
coord0.name=Position
coord0.type=Point
coord0.marker=B
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg1.name=Primary
arg1.type=Bool
arg1.help=Sets the spawned structure to primary for the side that owns it.
arg2.name=Building type
arg2.type=List
arg2.list=Item
arg2.list_type=Buildings
arg3.name=Method
arg3.type=List
arg3.list=Custom
arg3.values=Built no conc.;Built w. conc.;Instant w. conc.;Built no conc. no harv;Built w. conc. no harv;Instant w. conc. no harv
arg3.help=Allows you to spawn the building in with or without concrete, with buildup animation or instantly. You can also prevent a Harvester from flying in if it's a Refinery you're spawning.
arg4.name=Facing
arg4.type=List
arg4.list=Custom
arg4.values=Up;Up-Right;Right;Down-Right;Down;Down-Left;Left;Up-Left
arg4.help=Should only be used for spawned turrets. The turret's barrel will point that direction after spawning.
arg5.name=Tag
arg5.type=Number
arg5.maxval=255
arg5.help=Assigns the given tag to the spawned building.
arg6.name=Target var.
arg6.type=Variable
arg6.help=Stores the spawned building's index into the designated variable. It can be referred to in other events via this variable._If you do not need to use this, simply leave the default value (variable 0). However, be cautious that this event may change the variable value if you use that variable for some purpose. Especially be cautious if you use this event inside a hook, where several variables from the beginning (variable 0, 1 etc.) are used for a specific purpose. In that case, use some safe variable which is not used by the hook.
contents=%a6 = %a2 %a1(Method: %a3  Facing: %a4  Tag: %a5)

;25
[Add Bullet]
help=Spawns the specified projectile at the attached coordinates. The projectile will fly to the target coordinates, then hit the tile and cause damage. If the projectile attempts to fly very far, roughly more than 70 tiles, it may glitch out.
coord0.name=Source pos.
coord0.type=Point
coord0.marker=p
coord0.help=The source tile coordinates. The projectile will always be spawned in the middle of the tile.
coord1.name=Target pos.
coord1.type=Point
coord1.marker=P
coord1.help=Coordinates of the target tile.
coord2.name=Pixel position
coord2.maxval=31
coord2.default=16
coord2.help=Pixel-precise subcoordinates within the target tile. The default value is 16,16 and puts the attack in the middle of the 32x32 tile._Note: If Target position (above) is set to 0,0 you can use variables on Pixel position to define global pixel coordinates around the whole map. 
coord3.name=Rand. spread
coord3.maxval=255
coord3.help=Measured in pixels, randomly offsets the target position from the specified position to simulate inaccuracy. The horizontal and vertical offset may be different.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Weapon
arg2.type=List
arg2.list=Item
arg2.list_type=Weapons
arg3.name=Spread type
arg3.type=Switch
arg3.values=Square;Circle
arg3.help=Determines if the shape of random spread is a square or a circle.
arg4.name=Play sound
arg4.type=Bool
arg4.help=Plays the weapon's "Firing sound" at source position.
arg5.name=Tag
arg5.type=Number
arg5.maxval=255
arg5.help=Assigns the given tag to the spawned bullet.
arg6.name=Target var.
arg6.type=Variable
arg6.help=Stores the spawned bullet's index into the designated variable. It can be referred to in other events via this variable._If you do not need to use this, simply leave the default value (variable 0). However, be cautious that this event may change the variable value if you use that variable for some purpose. Especially be cautious if you use this event inside a hook, where several variables from the beginning (variable 0, 1 etc.) are used for a specific purpose. In that case, use some safe variable which is not used by the hook.
contents=%a6 = %a2 (Src: %c0 Targ: %c1 Pixel: %c2 Spread: %c3 %a3 Tag: %a5) %a4

;26
[Add Explosion]
help=Spawns the specified explosion effect at the attached coordinates._THIS IS PURELY GRAPHICAL. Use event type 22 "Damage Tiles," with Hit Explosion enabled to create explosions that deal damage.
coord0.name=Position
coord0.type=Point
coord0.marker=E
coord0.help=Coordinates of the target tile.
coord2.name=Pixel position
coord2.maxval=31
coord2.default=16
coord2.help=Pixel-precise subcoordinates within the target tile. The default value is 16,16 and puts the explosion in the middle of the 32x32 tile where the event fires._Note: If Position (above) is set to 0,0 you can use variables on Pixel position to define global pixel coordinates around the whole map. 
coord3.name=Rand. spread
coord3.maxval=255
coord3.help=Measured in pixels, randomly offsets the target position from the specified position. The horizontal and vertical offset may be different.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Explosion
arg2.type=List
arg2.list=Item
arg2.list_type=Explosions
arg3.name=Spread type
arg3.type=Switch
arg3.values=Square;Circle
arg3.help=Determines if the shape of random spread is a square or a circle.
arg4.name=Play sound
arg4.type=Bool
arg4.help=Plays the explosion's sound effect at target position.
arg5.name=Tag
arg5.type=Number
arg5.maxval=255
arg5.help=Assigns the given tag to the spawned explosion.
arg6.name=Target var.
arg6.type=Variable
arg6.help=Stores the spawned explosion's index into the designated variable. It can be referred to in other events via this variable._If you do not need to use this, simply leave the default value (variable 0). However, be cautious that this event may change the variable value if you use that variable for some purpose. Especially be cautious if you use this event inside a hook, where several variables from the beginning (variable 0, 1 etc.) are used for a specific purpose. In that case, use some safe variable which is not used by the hook.
contents=%a6 = %a2 (Pixel: %c2 Spread: %c3 %a3 Tag: %a5) %a4

;27
[Add Crate]
help=Spawns a crate at the specified location. Only up to 30 crates can exist on the map at any given time. Spice blooms count as crates.
coord0.name=Position
coord0.type=Point
coord0.marker=C
arg0.name=Crate type
arg0.type=List
arg0.list=Game
arg0.list_type=CrateType
arg0.help=Specify what type of crate spawns.
arg1.name=Image
arg1.type=List
arg1.list=Game
arg1.list_type=CrateImage
arg1.help=Determines the visual appearance of the spawned crate.
arg2.name=Ext. data
arg2.type=Number
arg2.help=Additional data that change what the crate rewards when picked up, depending on the crate type. To customize the extension data, go to the map editor. On the sidebar, select the Structures tab, then Advanced, and then Crates. Adjust the parameters to your liking, then copy the extension data value for use in the event.
arg3.name=Respawns
arg3.type=Number
arg3.showif=0>6
arg3.help=Usable only on Bloom Spawner. It governs how many times the Spice bloom will respawn.
arg5.name=Expiration
arg5.type=BigNumber
arg5.help=Number of ticks after which the crate will disappear. If set to 0, the crate will never expire.
contents=%a0 | %a1 | Ext. data = %a2 | Resp. = %a3 | Expiration = %a5

;28
[Add Concrete]
help=Spawns concrete in the specified area for the chosen side.
coord0.name=Area start
coord0.type=Area
coord0.marker=c
coord1.name=Area end
coord1.showif=5=0
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg5.name=Tile bitmask
arg5.type=HexNumber
arg5.default=0
arg5.help=Defines the precise formation of spawned concrete, instead of filling the whole target area. It's a 16-bit hexadecimal number which can define up to a 4*4 area.
contents={%c0 : %c1} %a5

;29
[Spice Bloom]
help=Spawns a Spice bloom explosion at the attached coordinates._If there is no valid terrain for a Spice bloom to spawn on, it may appear as though this event does nothing._This event ignores the 30 crates limit since it spawns the Spice bloom explosion, not the bloom itself.
coord0.name=Position
coord0.type=Point
coord0.marker=b
arg1.name=Radius
arg1.type=Number
arg1.default=1
arg3.name=Type
arg3.type=List
arg3.list=Custom
arg3.values=Classic;Instant square;Instant circle;Dune2 style
arg3.help=Possible Spice bloom types are:_Classic: The Dune2000 Spice bloom style. Spice will fly from the spawn coordinates to random tiles within the radius._Instant square: Spice will appear instantly in a square shape within the radius around the spawn position. Only thin spice can be added this way._Instant circle: Spice will appear instantly in a circle shape within the radius (max. 7) around the spawn position. Only thin spice can be added this way._Dune2 style: Spice will appear instantly in a circle shape within the radius (max. 7) around the spawn position. Thick spice can appear on tiles where some spice already exists. Causes screen shake and explosion sound.
arg4.name=Randomizer
arg4.type=Bool
arg4.showif=3>0
arg4.help=The whole area will not be filled with spice, but spice randomly may or may not spawn on tiles within the target area.
contents=%a3 (Radius = %a1) %a4

;30
[Shake Screen]
help=Shakes the screen as if a large structure had been destroyed.
arg5.name=Duration
arg5.type=BigNumber
arg5.default=10
arg5.help=Duration is measured in ticks.
contents=%a5

;31
[Change Viewport]
help=Forces the player's camera to the specified coordinates._The viewport position is locked (player cannot move camera) for duration of one tick after this event executes. If you want to lock camera movement for some duration, execute this event every tick during that duration._Example: Consider tying this event to an inactive type 2 condition (Interval) with a run count of a few in-game seconds (75) and Start/Next Delays of zero. Activating the Interval condition will lock the camera where you want for that duration._This event can be also used to follow a specific unit by setting the viewport to the unit's pixel coordinates.
coord0.name=Position
coord0.type=Point
coord0.marker=v
arg3.name=Mode
arg3.type=Switch
arg3.values=Center;TopLeft
arg3.help=Sets whether the specified Position shall be the center of the viewport, or the top-left corner of the viewport.
arg4.name=Units
arg4.type=Switch
arg4.values=Tiles;Pixels
arg4.help=Specifies whether Position is measured in tile coordinates or pixel-precise coordinates.
contents=%a3 %a4

;32
[Change Map Block]
help=Transforms terrain at the specified location. The maximum number of tiles each Change Map Block event can handle is 12.__Start by mapping the tiles you want the terrain to be transformed to. Select those tiles with however many Change Map Block events you need to cover the whole area. Then, re-map the terrain to how you want it to be at the beginning of the map.__You can check how the transformed terrain looks on the map by right-clicking the event number in the area marker (ctrl+H).__Transforming the terrain also changes tile attributes. If passable tiles are changed to impassable, then units located at those tiles will be destroyed. If buildable tiles are changed to non-buildable, then buildings located at those tiles will be destroyed and concrete will be removed too. Spice will be removed on tiles changed to non-sandy. Tile damage is reset to 0.
coord0.name=Position
coord0.type=PointAndSize
coord0.marker=M
coord1.name=Block size
coord1.default=1
coord1.readonly=1
arg3.name=Visual only
arg3.type=Bool
arg3.help=Changes only how the tiles appear and leaves their attributes untouched.
data=TileBlock
contents=Position: %c0 Size: %c1 %a3

;33
[Transform Tiles]
help=Transforms all designated tile(s) into other tile(s) via index value. This change could be visual-only, making this sort of event useful for something like animating custom water tiles.__To get the index of a tile for use in this event, go to the map editor. Select the "Terrain" tab on the sidebar, then click "Open tileset." Check the "Preset Helper" box in the top right, then right-click a tile you need for the event. The third value in the preset code is the index.
arg1.name=Number of tiles
arg1.type=Number
arg1.default=1
arg1.maxval=6
arg3.name=Mode
arg3.type=List
arg3.list=Custom
arg3.values=Normal;Visual only;Restore
data=TilePairs
contents=%a1 tile pairs (%a3)

;34
[Add Building Destruction]
help=Adds a building destruction visual and sound effect and spawns debris, as if a building of the specified type were destroyed at the specified coordinates. The coordinates are the top left-most tile of the spawned building.__Technically, it spawns a building and then destroys it immediately. Due to how this works, spawning a building on top of units can affect them. Infantry belonging to a different side will despawn and vehicles will turn to the side the structure explosion belongs to. Structures under the tiles occupied by the destroyed building will no longer take up space._Use this event with caution to avoid these effects.__The destroyed building will not cause the 'Building lost' message from the mentat, nor will it spawn infantry or provide build radius.
coord0.name=Position
coord0.type=Point
coord0.marker=d
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Building type
arg2.type=List
arg2.list=Item
arg2.list_type=Buildings
contents=%a2

;35
[Add Homing Bullet]
help=Fires a homing projectile from the specified coordinates to the targeted unit. The Weapon used must have the "Homing" property.
coord0.name=Source pos.
coord0.type=Point
coord0.marker=h
coord0.help=The source tile coordinates.
coord1.name=Pixel position
coord1.maxval=31
coord1.default=16
coord1.help=Pixel-precise subcoordinates within the source tile. The default value is 16,16 and puts the source in the middle of the 32x32 tile._Note: If Source position (above) is set to 0,0 you can use variables on Pixel position to define global pixel coordinates around the whole map. 
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg0.help=The side the fired projectile belongs to.
arg1.name=Weapon
arg1.type=List
arg1.list=Item
arg1.list_type=Weapons
arg2.name=Enemy side
arg2.type=List
arg2.list=Item
arg2.list_type=Sides
arg2.help=The enemy unit's side.
arg3.name=Enemy index
arg3.type=Variable
arg3.help=The enemy unit index. It must be provided within a variable.
arg4.name=Play sound
arg4.type=Bool
arg4.help=Plays the weapon's "Firing sound" at source position.
arg5.name=Tag
arg5.type=Number
arg5.maxval=255
arg5.help=Assigns the given tag to the spawned bullet.
arg6.name=Target var.
arg6.type=Variable
arg6.help=Stores the spawned bullet's index into the designated variable. It can be referred to in other events via this variable._If you do not need to use this, simply leave the default value (variable 0). However, be cautious that this event may change the variable value if you use that variable for some purpose. Especially be cautious if you use this event inside a hook, where several variables from the beginning (variable 0, 1 etc.) are used for a specific purpose. In that case, use some safe variable which is not used by the hook.
contents=%a6 = %a1 (Src: %c0 Pixel: %c1 Enemy side: %a2 index: %a3 Tag: %a5) %a4

;36
[Activate Timer]
help=Activates the chosen Timer, Interval, or Random Interval condition.__A timer or interval can be activated multiple times, restarting it whenever this event fires. If your timer or interval doesn't appear to be working, check that this event isn't firing repeatedly and constantly restarting the timer or interval.
arg5.name=Condition
arg5.type=Number
arg5.maxval=255
arg5.reference=Condition
contents=%a5

;37
[Remove Message]
help=Removes the designated message or multiple messages.
arg0.name=What
arg0.type=List
arg0.list=Custom
arg0.values=Ref. ID;Chat oldest;Chat newest
arg0.help=What gets removed:_Ref. ID: The message with specified Reference ID will get removed. If Amount is greater than 1, then it removes also messages with that many following IDs. _Chat oldest: Removes oldest message(s) from chat._Chat newest: Removes newest message(s) from chat.
arg1.name=Ref. ID
arg1.type=Number
arg1.maxval=255
arg1.default=1
arg1.showif=0=0
arg2.name=Amount
arg2.type=Number
arg2.default=1
arg2.maxval=255
arg2.help=Number of messages to be removed.
contents=%a0 %a1 amount=%a2

;38
[Set Message Color]
help=Changes one color from the 16-color text color palette. Using this event will affect all messages which use that color, either if they are shown on-screen, or will be shown in future.
arg0.name=Color
arg0.type=List
arg0.list=Custom
arg0.values=Red;Green flashing;Yellow;Cyan;Magenta;Green;Blue;Grey;Side 0;Side 1;Side 2;Side 3;Side 4;Side 5;Side 6;Side 7
arg0.help=Which color to change.
arg1.name=Mode
arg1.type=List
arg1.list=Custom
arg1.values=Solid + shadow color;Gradient color;Time transition 1;Time transition 2
arg1.help=Color mode:_Solid + shadow color: Solid, static color. Color1 is the main text color and Color2 is the shadow color._Gradient color: Static color, the color gradually changes from Color1 to Color2 vertically._Time transition 1/2: The color dynamically changes (pulsuates) from Color 1 to Color 2 and back during time. For that to work, this event must be executed constantly every tick.
arg2.name=Trans. speed
arg2.type=Number
arg2.default=1
arg2.maxval=3
arg2.showif=1>1
arg2.help=Speed of changing color. 
arg3.name=Trans. stages
arg3.type=Number
arg3.default=16
arg3.maxval=64
arg3.showif=1>1
arg3.help=Number of stages between the first and second color.
arg5.name=Color 1
arg5.type=HexNumber
arg6.name=Color 2
arg6.type=HexNumber
contents=%a0 %a1 %a5 %a6

;39
[Set Tooltip]
help=This event must be used inside a hook block of type "Handle Tooltip" (event type 234). It can be used to customize tooltip text._Custom tooltips can have up to 10 lines. One event can be used to change a single line of tooltip, so use multiple events to change more lines.__You can either use any pre-defined text from TEXT.UIB table by Message ID, or use a custom text. Remember that each line of custom text must use a unique Message ID, and it will overwrite the original text from TEXT.UIB sharing the same ID._You can use variables within custom text. To refer to variables in the text of the message, use the @ symbol. The first @ symbol will refer to variable 1, the second @ refers to variable 2 and so on.
arg2.name=Line number
arg2.type=Number
arg2.maxval=9
arg2.help=Determines which line of the tooltip is overwritten or added.
arg3.name=Color mode
arg3.type=List
arg3.list=Custom
arg3.values=Keep;Yellow;Gray;Custom
arg3.help=Determines the text color of the line. "Keep" displays text in original color the tooltip would normally be drawn with. For "Custom" color, type in the RGB hex code of the color.
arg5.name=Color
arg5.type=HexNumber
arg5.showif=3=3
data=Message
contents=(Line: %a2 Color: %a3%a5) %s

;40
[Transfer Credits]
help=Change the type of credits the chosen side has stored._Note: Storage space is calculated shortly after the game begins. This event must fire at timer=2 or later in order to work.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg3.name=Operation
arg3.type=List
arg3.list=Custom
arg3.values=All to cash;All to spice (storage);All to spice (force);Value to cash;Value to spice (storage);Value to spice (force)
arg3.help=_"All to cash" frees up all the space in the chosen side's Silos._"All to spice (storage)" fills Silos with available credits. Excess is not lost and is kept as cash._"All to spice (force)" fills Silos with all available credits. Excess is lost._"Value" parameters are identical to above, but only the amount you specify is transferred.
arg5.name=Value
arg5.type=BigNumber
arg5.showif=3>2
contents=%a3 %a5

;41
[Set Building Upgrades]
help=Adjusts upgrades for the chosen building group belonging to the specified side.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Building group
arg2.type=List
arg2.list=Item
arg2.list_type=BuildingGroups
arg3.name=Operation
arg3.type=List
arg3.list=Game
arg3.list_type=ValueOperation
arg5.name=Value
arg5.type=Number
contents=%a2: %a3 %a5

;42
[Set Starport Stock]
help=Adjusts stock for the chosen unit in the specified side's Starport menu. The unit must be in the Starport menu for this event to have any tangible effect.__Due to how this game works, the player will not be able to order six of the same unit, even if six or more are available.__Starport stock is determined for each side shortly after the game begins. To be safe, run this sort of event at timer=10 or later.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Unit type
arg2.type=List
arg2.list=Item
arg2.list_type=Units
arg3.name=Operation
arg3.type=List
arg3.list=Game
arg3.list_type=ValueOperation
arg5.name=Value
arg5.type=Number
contents=%a2: %a3 %a5

;43
[Set Starport Cost]
help=Adjusts cost for the chosen unit in the specified side's Starport menu. The unit must be in the Starport menu for this event to have any tangible effect.__Starport costs are determined for each side shortly after the game begins. To be safe, run this sort of event at timer=10 or later.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Unit type
arg2.type=List
arg2.list=Item
arg2.list_type=Units
arg3.name=Operation
arg3.type=List
arg3.list=Game
arg3.list_type=ValueOperation
arg3.showif=4=0
arg4.name=Default cost
arg4.type=Bool
arg4.help=Sets the cost to the unit template's build cost. This does not account for how difficulty changes a unit's cost.
arg5.name=Value
arg5.type=BigNumber
arg5.showif=4=0
contents=%a2: %a4%a3 %a5

;44
[Change Starport Unit]
help=Changes the unit type at the chosen slot in the specified side's Starport menu._Slots are left to right, top to bottom. Therefore, the vanilla Starport menu's slot=3 is the Combat Tank.__Cost and stock data are not inherited. Use event types 42 and 43 to adjust those after a unit type in the Starport menu is changed.__Starport data is determined for each side shortly after the game begins. To be safe, run this sort of event at timer=10 or later.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg1.name=Slot
arg1.type=Number
arg1.maxval=7
arg2.name=Unit type
arg2.type=List
arg2.list=Item
arg2.list_type=Units
contents=Slot %a1 = %a2

;45
[Show Side Data]
help=Displays in-memory data for the chosen side from the specified memory offset. Up to 128 bytes are shown on screen.__Data is shown for a duration of 1 tick, thus this event is intended to be constantly executed in order to show real-time data.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg5.name=Offset
arg5.type=HexNumber
contents=%a5

;46
[Set AI Property]
help=Changes the chosen AI property.__This event doesn't play nice with some AI properties. Experimentation may be required to determine what you can and cannot achieve with it. The "AI Enabled" property, for example, should not be messed with and you'll have to find other ways to keep an AI inactive before it's time for it to start doing stuff.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
arg3.name=Operation
arg3.type=List
arg3.list=Game
arg3.list_type=ValueOperation
;arg5.name=Offset
;arg5.type=BigNumber
arg6.name=Value
arg6.type=BigNumber
gamestruct_name=AI
gamestruct_offset_arg=5
gamestruct_value_arg=6
contents=%m: %a3 %a6

;47
[Show AI Data]
help=Displays in-memory data for the chosen AI from specified memory offset. Up to 128 bytes are shown on screen.__Data is shown for a duration of 1 tick, thus this event is intended to be constantly executed in order to show real-time data.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg5.name=Offset
arg5.type=BigNumber
contents=%a5

;48
[Set Memory Data]
help=Sets the memory at specified address to specified value.__Don't touch this if you don't know what you're doing.
arg1.name=Data type
arg1.type=List
arg1.list=Game
arg1.list_type=DataType
arg3.name=Operation
arg3.type=List
arg3.list=Game
arg3.list_type=ValueOperation
arg5.name=Address
arg5.type=HexNumber
arg6.name=Value
arg6.type=BigNumber
contents=%a1 %a5: %a3 %a6

;49
[Show Memory Data]
help=Displays in-memory data for the specified address. Up to 128 bytes are shown on screen.__Data is shown for a duration of 1 tick, thus this event is intended to be constantly executed in order to show real-time data.
arg5.name=Address
arg5.type=HexNumber
contents=%a5

;50
[Destroy Unit]
help=Destroys units belonging to the specified side which fall under the criteria you define.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg4.name=Silent
arg4.type=Bool
arg4.help=Despawn the unit(s) without fanfare. If used on map borders, this can make it appear as though the 'destroyed' units are leaving the battlefield._Silent destruction prevents on-death damage, such as Grenadiers'.
data=UnitFilter
data_area_marker=U
allow_obj_index=1
contents=%a4%s

;51
[Damage/Heal Unit]
help=Damages or heals units belonging to the specified side which fall under the criteria you define.__Dead units are automatically excluded, so you don't have to worry about accidentally creating a zombie by healing a unit that has died.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg3.name=Action
arg3.type=Switch
arg3.values=Damage;Heal
arg4.name=Units
arg4.type=Switch
arg4.values=Hit points;Percent
arg5.name=Value
arg5.type=BigNumber
data=UnitFilter
data_area_marker=U
allow_obj_index=1
contents=%a3 %a5 %a4 | %s

;52
[Change Unit Owner]
help=Changes the specified unit(s) to a new side.__This event uses Deviator code._It's not possible to change infantry to a new side. Thus, any infantry affected by this event will simply disappear.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg2.name=Target
arg2.type=List
arg2.list=Item
arg2.list_type=Sides
data=UnitFilter
data_area_marker=U
allow_obj_index=1
contents=%a2 | %s

;53
[Change Unit Type]
help=Changes units falling under the criteria you define to the chosen unit type.__Infantry can technically be transformed into vehicles, but they should only be transformed if state=idle. Otherwise, you'll encounter a null baseimage error._Any sort of vehicle being transformed into any sort of infantry will result in instantly crushed infantry, even if the vehicle cannot normally crush infantry and even if the infantry unit is uncrushable.__For the above reasons, it's inadvisable to use this event to produce vehicles from infantry, and it's impossible to use this event to produce infantry from vehicles.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg2.name=Unit type
arg2.type=List
arg2.list=Item
arg2.list_type=Units
arg2.showif=4=0
arg4.name=Defined type
arg4.type=Bool
arg4.help=Transform affected unit(s) into "Unit upgrade type" defined for those unit(s). If a unit doesn't have its "Unit upgrade type" box checked in the structures editor, it will not be affected by an event using this setting.
data=UnitFilter
data_area_marker=U
allow_obj_index=1
contents=%a2%a4 | %s

;54
[Set Unit Flag]
help=Adjusts the desired flag on units falling under the criteria you define.__Some flags have unexpected applications. For instance, the "Delivering" flag which is normally used with Carryalls prevents the AI from assigning regular units to various tasks. It can be flipped on for certain AI-owned units to prevent them from issuing commands to those specific units.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg3.name=Operation
arg3.type=List
arg3.list=Game
arg3.list_type=FlagOperation
arg5.name=Flag
arg5.type=List
arg5.list=Game
arg5.list_type=UnitFlag
data=UnitFilter
data_area_marker=U
allow_obj_index=1
contents=%a3 %a5 | %s

;55
[Set Unit Property]
help=Adjusts the desired property on units falling under the criteria you define.__This event can be used to do things like make Saboteurs spawn from Ordos Palaces with their stealth suits fully charged, or fill Harvesters at the start of the map via adjustment of the Special Purpose property._Be careful changing properties like unit state. Changing a unit's state without the right criteria can easily crash the game.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=123
arg3.name=Operation
arg3.type=List
arg3.list=Game
arg3.list_type=ValueOperation
arg5.name=Value
arg5.type=BigNumber
gamestruct_name=Unit
data=UnitFilter
data_area_marker=U
allow_obj_index=1
contents=%m: %a3 %a5 | %s

;56
[Select Unit]
help=Selects units falling under the defined criteria belonging to the specified side.__This event should be used in combination with events in the "Orders" category, such as event type 80, "Order Unit Move." Orders are recommended to immediately follow event type 56 in the events column so things work as you would expect them to.__Not all unit orders require event type 56, "Select Unit," to function.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg4.name=Excl. restore
arg4.type=Bool
arg4.help=Prevents the units selected by this event from being re-selected when an accompanying Order event's "Restore select" box is checked.
data=UnitFilter
data_area_marker=U
allow_obj_index=1
contents=%a4%s

;57
[Airlift Unit]
help=Airlifts units falling under the criteria you define to the specified coordinates, or to the unit's target destination.__While powerful for creating custom Carryall behaviors, make certain you always include certain caveats like Category=Center of tile in your criteria. Attempting to pick up a unit from outside the center of a tile can crash the game.__Infantry picked up by Carryalls with this event will be instantly crushed when they arrive at their destination. For that reason, one of your criteria should also be "Category=Vehicle," unless using this event to end the mission when a certain infantry unit is airlifted.__You may wish to use the "route mode" categories in the criteria of this event as well. "Route mode 3," for example, occurs if a unit cannot reach its destination.
coord0.name=Target
coord0.type=Point
coord0.marker=A
coord0.showif=4=0
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg4.name=Unit's target
arg4.type=Bool
arg4.help=Airlift unit to where it was ordered to move, rather than coordinates specified within this event.
data=UnitFilter
data_area_marker=U
allow_obj_index=1
contents=%a4%s

;58
[#58]

;59
[Show Unit Data]
help=Displays in-memory data for a unit falling under the criteria you define. Data for only one unit can be displayed, so make sure the criteria will select just one unit.__Data is shown for a duration of 1 tick, thus this event is intended to be constantly executed in order to show real-time data.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
data=UnitFilter
data_area_marker=U
allow_obj_index=1
contents=%s

;60
[Destroy Building]
help=Destroys buildings belonging to the specified side which fall under the criteria you define.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg4.name=Silent
arg4.type=Bool
arg4.help=Despawn the building(s) without fanfare. Silent destruction prevents effects like screen shake, falling debris, and infantry spawning.
data=BuildingFilter
data_area_marker=B
allow_obj_index=1
contents=%a4%s

;61
[Damage/Heal Building]
help=Damages or heals structures belonging to the specified side which fall under the criteria you define.__Destroyed structures are automatically excluded.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg3.name=Action
arg3.type=Switch
arg3.values=Damage;Heal
arg4.name=Units
arg4.type=Switch
arg4.values=Hit points;Percent
arg5.name=Value
arg5.type=BigNumber
data=BuildingFilter
data_area_marker=B
allow_obj_index=1
contents=%a3 %a5 %a4 | %s

;62
[Change Building Owner]
help=Changes the specified building(s) to a new side.__This event uses capture code as if the building(s) had been captured by an Engineer. AIs will automatically sell captured structures. If you give structures to an AI using this event and don't want them to sell them immediately, follow this event with a type 64 event, "Set Building Flag," to switch off the "Was captured" flag.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg2.name=Target
arg2.type=List
arg2.list=Item
arg2.list_type=Sides
data=BuildingFilter
data_area_marker=B
allow_obj_index=1
contents=%a2 | %s

;63
[Change Building Type]
help=Changes structures falling under the criteria you define to the chosen structure type.__This event operates strangely when converting structures of different sizes. You may wish to use it primarily for things like, for example, changing weaker turrets into stronger ones if the player has selected hard difficulty.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg2.name=Building type
arg2.type=List
arg2.list=Item
arg2.list_type=Buildings
data=BuildingFilter
data_area_marker=B
allow_obj_index=1
contents=%a2%a4 | %s

;64
[Set Building Flag]
help=Adjusts the desired flag on structures falling under the criteria you define.__Not all flags should be changed through this event. For example, there are multiple bits that determine a building is set to primary. To ensure a building is properly set to primary, don't set it to primary through this event! You should use event types 66 (Select Building) and 93 (Order Building Set Primary) in combination instead.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg3.name=Operation
arg3.type=List
arg3.list=Game
arg3.list_type=FlagOperation
arg5.name=Flag
arg5.type=List
arg5.list=Game
arg5.list_type=BuildingFlag
data=BuildingFilter
data_area_marker=B
allow_obj_index=1
contents=%a3 %a5 | %s

;65
[Set Building Property]
help=Adjusts the desired property on structures falling under the criteria you define.__This type of event can be used to do things like make turrets face a more specific direction at the start of the game.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=123
arg3.name=Operation
arg3.type=List
arg3.list=Game
arg3.list_type=ValueOperation
arg5.name=Value
arg5.type=BigNumber
gamestruct_name=Building
data=BuildingFilter
data_area_marker=B
allow_obj_index=1
contents=%m: %a3 %a5 | %s

;66
[Select Building]
help=Selects structures falling under the defined criteria belonging to the specified side.__This event should be used in combination with events in the "Orders" category, such as event type 93, "Order Building Set Primary." Orders are recommended to immediately follow event type 66 in the events column so things work as you would expect them to.__Not all building orders require event type 66, "Select Building," to function.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg4.name=Excl. restore
arg4.type=Bool
arg4.help=Prevents the structures selected by this event from being re-selected when an accompanying Order event's "Restore select" box is checked.
data=BuildingFilter
data_area_marker=B
allow_obj_index=1
contents=%a4%s

;67
[Show Building Data]
help=Displays in-memory data for a building falling under the criteria you define. Data for only one building can be displayed, so make sure the criteria will select just one building.__Data is shown for a duration of 1 tick, thus this event is intended to be constantly executed in order to show real-time data.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
data=BuildingFilter
data_area_marker=B
allow_obj_index=1
contents=%s

;68
[Set Bullet Property]
help=Adjusts the desired property on projectiles falling under the criteria you define.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=123
arg3.name=Operation
arg3.type=List
arg3.list=Game
arg3.list_type=ValueOperation
arg5.name=Value
arg5.type=BigNumber
gamestruct_name=Bullet
data=BulletFilter
data_area_marker=P
allow_obj_index=1
contents=%m: %a3 %a5 | %s

;69
[Set Explosion Property]
help=Adjusts the desired property on explosion effects falling under the criteria you define.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=123
arg3.name=Operation
arg3.type=List
arg3.list=Game
arg3.list_type=ValueOperation
arg5.name=Value
arg5.type=BigNumber
gamestruct_name=Explosion
data=ExplosionFilter
data_area_marker=E
allow_obj_index=1
contents=%m: %a3 %a5 | %s

;70
[Remove Crate]
help=Removes crates on the map which match the defined criteria.
data=CrateFilter
data_area_marker=C
allow_obj_index=1
contents=%s

;71
[Pickup Crate]
help=Crates on the map which match the defined criteria will act as though they've been picked up by the chosen side.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
data=CrateFilter
data_area_marker=C
allow_obj_index=1
contents=%s

;72
[Set Crate Property]
help=Adjusts the desired property on crates falling under the criteria you define.
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=11
arg3.name=Operation
arg3.type=List
arg3.list=Game
arg3.list_type=ValueOperation
arg5.name=Value
arg5.type=BigNumber
gamestruct_name=Crate
data=CrateFilter
data_area_marker=C
allow_obj_index=1
contents=%m: %a3 %a5 | %s

;73
[Show Crate Data]
help=Displays in-memory data for a crate falling under the criteria you define. Data for only one crate can be displayed, so make sure the criteria will select just one crate.__Data is shown for a duration of 1 tick, thus this event is intended to be constantly executed in order to show real-time data.
data=CrateFilter
data_area_marker=C
allow_obj_index=1
contents=%s

;74
[Change Tile]
help=Changes tiles matching the defined criteria to the tile index specified.
arg3.name=Mode
arg3.type=List
arg3.list=Custom
arg3.values=Normal;Visual only;Restore
arg3.help=_Normal: Change the tile completely, including attributes, and destroy units/buildings that cannot exist on the tile after changing it._Visual only: Only change visual appearance of tile without changing its attributes._Restore: Revert tiles previously changed with "Visual only" to their original appearance.
arg5.name=Tile Idx
arg5.type=Number
arg5.maxval=799
arg5.showif=3<2
arg5.help=To get the index of a tile for use in this event, go to the map editor. Select the "Terrain" tab on the sidebar, then click "Open tileset." Check the "Preset Helper" box in the top right, then right-click a tile you need for the event. The third value in the preset code is the index.
data=TileFilter
data_area_marker=T
allow_obj_index=1
contents=%a5 (%a3) | %s

;75
[Set Tile Attribute]
help=Adjusts tile attributes for tiles falling under the criteria you specify.
arg3.name=Operation
arg3.type=List
arg3.list=Game
arg3.list_type=FlagOperation
arg5.name=Flag
arg5.type=List
arg5.list=Game
arg5.list_type=TileAtr
arg5.help=To refer to tile attributes, use the attributes editor, which you can open with ctrl + A. Right-clicking a tile in the attributes editor window will display its current attributes.
data=TileFilter
data_area_marker=T
allow_obj_index=1
contents=%a3 %a5 | %s

;76
[Set Tile Property]
help=Adjusts tile properties for terrain falling under the criteria you specify.
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=11
arg3.name=Operation
arg3.type=List
arg3.list=Game
arg3.list_type=ValueOperation
arg5.name=Value
arg5.type=BigNumber
gamestruct_name=Tile
data=TileFilter
data_area_marker=T
allow_obj_index=1
contents=%m: %a3 %a5 | %s

;77
[Reveal Tile]
help=Reveals tiles matching the specified criteria.
arg1.name=Radius
arg1.type=Number
arg1.maxval=7
arg1.help=A radius up to 7 may be used. The radius will be revealed around each applicable tile.
data=TileFilter
data_area_marker=T
allow_obj_index=1
contents=%a1 | %s

;78
[Hide Tile]
help=Hides tiles matching the specified criteria, concealing them behind shroud.__Shroud will cover even areas that are supposed to be revealed for a tick, such as tiles within friendly units' sight radii, before being uncovered again. It's thus inadvisable to fire this event often, or you should add caveats in case the player has units in the area you wish to conceal, to avoid dizzying the player with repeated use.
data=TileFilter
data_area_marker=T
allow_obj_index=1
contents=%s

;79
[Show Tile Data]
help=Displays in-memory data for a tile falling under the criteria you define. Data for only one tile can be displayed, so make sure the criteria will select just one tile.__Data is shown for a duration of 1 tick, thus this event is intended to be constantly executed in order to show real-time data.
data=TileFilter
data_area_marker=T
allow_obj_index=1
contents=%s

;80
[Order Unit Move]
help=Orders selected units belonging to the specified side to move to the defined coordinates.__Use in combination with event type 56, "Select Unit."
coord0.name=Target
coord0.type=Point
coord0.marker=m
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg4.name=Restore select.
arg4.type=Bool
arg4.help=Re-selects units the side had selected, if any, prior to the use of event type 56, "Select Unit." This allows you to give orders to player-owned units without disrupting the player's command of other units in the slightest. If you're not sure if you should use "Restore select." or not, just check the box and don't worry about it.
contents=%a4

;81
[Order Dock With Refinery]
help=Orders selected units belonging to the specified side to dock with a Refinery matching the defined criteria.__Use in combination with event type 56, "Select Unit."__Only units that can dock with a Refinery will be able to follow this order. You can use this event to assign Harvesters to specific Refineries. The Harvester does not need to actually dock at the Refinery to be assigned to it, it needs merely be ordered to dock. You can follow this event with a move order onto a specific Spice tile to manually assign where the Harvester begins its mining operations as well.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg4.name=Restore select.
arg4.type=Bool
arg4.help=Re-selects units the side had selected, if any, prior to the use of event type 56, "Select Unit." This allows you to give orders to player-owned units without disrupting the player's command of other units in the slightest. If you're not sure if you should use "Restore select." or not, just check the box and don't worry about it.
data=BuildingFilter
data_area_marker=B
allow_obj_index=1
contents=%a4%s

;82
[Order Repair Selected Units]
help=Orders selected units belonging to the specified side to a Repair Pad matching the defined criteria.__Use in combination with event type 56, "Select Unit."__Because the AI likes to assign its units to unit groups, you should be sure to assign AI units given this order a non-applicable Group ID value, such as 255, so they can be reassigned. Event type 55 can manipulate the Group ID property. Otherwise, for example, an attacking enemy unit will immediately be ordered to return to the attack as soon as the conditions demanding it be repaired are no longer met.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg4.name=Restore select.
arg4.type=Bool
arg4.help=Re-selects units the side had selected, if any, prior to the use of event type 56, "Select Unit." This allows you to give orders to player-owned units without disrupting the player's command of other units in the slightest. If you're not sure if you should use "Restore select." or not, just check the box and don't worry about it.
data=BuildingFilter
data_area_marker=B
allow_obj_index=1
contents=%a4%s

;83
[Order Repair Single Unit]
help=Orders units belonging to the specified side and matching the defined criteria to use a Repair Pad.__This event does not require the use of event type 56, "Select Unit." It works just like if you were to use the repair tool to click on a damaged vehicle.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
data=UnitFilter
data_area_marker=U
allow_obj_index=1
contents=%s

;84
[Order Unit Attack Unit]
help=Orders selected units belonging to the specified side to attack a unit matching the defined critera and belonging to the target side.__Use in combination with event type 56, "Select Unit."
arg0.name=Target
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg2.name=Side
arg2.type=List
arg2.list=Item
arg2.list_type=Sides
arg4.name=Restore select.
arg4.type=Bool
arg4.help=Re-selects units the side had selected, if any, prior to the use of event type 56, "Select Unit." This allows you to give orders to player-owned units without disrupting the player's command of other units in the slightest. If you're not sure if you should use "Restore select." or not, just check the box and don't worry about it.
data=UnitFilter
data_area_marker=U
allow_obj_index=1
contents=%a4%a2 -> %a0 | %s

;85
[Order Unit Attack Building]
help=Orders selected units belonging to the specified side to attack a structure matching the defined critera and belonging to the target side.__Use in combination with event type 56, "Select Unit."
arg0.name=Target
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg2.name=Side
arg2.type=List
arg2.list=Item
arg2.list_type=Sides
arg4.name=Restore select.
arg4.type=Bool
arg4.help=Re-selects units the side had selected, if any, prior to the use of event type 56, "Select Unit." This allows you to give orders to player-owned units without disrupting the player's command of other units in the slightest. If you're not sure if you should use "Restore select." or not, just check the box and don't worry about it.
data=BuildingFilter
data_area_marker=B
allow_obj_index=1
contents=%a4%a2 -> %a0 | %s

;86
[Order Unit Attack Tile]
help=Orders selected units belonging to the specified side to attack a tile at the defined coordinates.__Use in combination with event type 56, "Select Unit."
coord0.name=Target
coord0.type=Point
coord0.marker=a
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg4.name=Restore select.
arg4.type=Bool
arg4.help=Re-selects units the side had selected, if any, prior to the use of event type 56, "Select Unit." This allows you to give orders to player-owned units without disrupting the player's command of other units in the slightest. If you're not sure if you should use "Restore select." or not, just check the box and don't worry about it.
contents=%a4

;87
[Order Unit Guard]
help=Orders selected units belonging to the specified side to guard their location.__Use in combination with event type 56, "Select Unit."__Event type 88, "Order Unit Scatter," can immediately precede this one and work as long as the scatter command's "Restore select." box is not ticked. This is a useful command combination for a cluster of infantry.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg4.name=Restore select.
arg4.type=Bool
arg4.help=Re-selects units the side had selected, if any, prior to the use of event type 56, "Select Unit." This allows you to give orders to player-owned units without disrupting the player's command of other units in the slightest. Unless using additional orders afterwards like in the example provided with Scatter / Guard, you should generally just tick the "Restore Select" box in events like these and not worry about it.
contents=%a4

;88
[Order Unit Scatter]
help=Orders selected units belonging to the specified side to scatter.__Use in combination with event type 56, "Select Unit."__Event type 87, "Order Unit Guard," can immediately follow this one and work as long as this one's "Restore select." box is not ticked. This is a useful command combination for a cluster of infantry.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg4.name=Restore select.
arg4.type=Bool
arg4.help=Re-selects units the side had selected, if any, prior to the use of event type 56, "Select Unit." This allows you to give orders to player-owned units without disrupting the player's command of other units in the slightest. Unless using additional orders afterwards like in the example provided with Scatter / Guard, you should generally just tick the "Restore Select" box in events like these and not worry about it.
contents=%a4

;89
[Order Unit Retreat]
help=Orders selected units belonging to the specified side to retreat. This order will only function if a base structure, even a concrete wall, exists for the side to which this event applies.__Use in combination with event type 56, "Select Unit."
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg4.name=Restore select.
arg4.type=Bool
arg4.help=Re-selects units the side had selected, if any, prior to the use of event type 56, "Select Unit." This allows you to give orders to player-owned units without disrupting the player's command of other units in the slightest. If you're not sure if you should use "Restore select." or not, just check the box and don't worry about it.
contents=%a4

;90
[Order Unit Deploy]
help=Orders units belonging to the specified side and matching the defined criteria to deploy.__This event does not require the use of event type 56, "Select Unit."
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
data=UnitFilter
data_area_marker=U
allow_obj_index=1
contents=%s

;91
[Order Building Attack Unit]
help=Orders selected buildings belonging to the specified side to attack a unit matching the defined critera and belonging to the target side.__Use in combination with event type 66, "Select Building."
arg0.name=Target
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg2.name=Side
arg2.type=List
arg2.list=Item
arg2.list_type=Sides
arg4.name=Restore select.
arg4.type=Bool
arg4.help=Re-selects whatever the side had selected, if anything, prior to the use of event type 66, "Select Building." This allows you to give orders to player-owned structures without disrupting the player's command of other entities in the slightest. If you're not sure if you should use "Restore select." or not, just check the box and don't worry about it.
data=UnitFilter
data_area_marker=U
allow_obj_index=1
contents=%a4%a2 -> %a0 | %s

;92
[Order Building Attack Building]
help=Orders selected buildings belonging to the specified side to attack a building matching the defined critera and belonging to the target side.__Use in combination with event type 66, "Select Building."
arg0.name=Target
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg2.name=Side
arg2.type=List
arg2.list=Item
arg2.list_type=Sides
arg4.name=Restore select.
arg4.type=Bool
arg4.help=Re-selects whatever the side had selected, if anything, prior to the use of event type 66, "Select Building." This allows you to give orders to player-owned structures without disrupting the player's command of other entities in the slightest. If you're not sure if you should use "Restore select." or not, just check the box and don't worry about it.
data=BuildingFilter
data_area_marker=B
allow_obj_index=1
contents=%a4%a2 -> %a0 | %s

;93
[Order Building Set Primary]
help=Orders a selected building belonging to the specified side to set itself to primary.__Use in combination with event type 66, "Select Building."
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg4.name=Restore select.
arg4.type=Bool
arg4.help=Re-selects whatever the side had selected, if anything, prior to the use of event type 66, "Select Building." This allows you to give orders to player-owned structures without disrupting the player's command of other entities in the slightest. If you're not sure if you should use "Restore select." or not, just check the box and don't worry about it.
contents=%a4

;94
[Order Building Repair]
help=Begins the repair process on buildings belonging to the specified side and matching the defined criteria.__This event does not require the use of event type 66, "Select Building." It works just like if you were to use the repair tool to click on a damaged structure.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
data=BuildingFilter
data_area_marker=B
allow_obj_index=1
contents=%s

;95
[Order Building Sell]
help=Sells buildings belonging to the specified side and matching the defined criteria.__This event does not require the use of event type 66, "Select Building." It works just like if you were to use the sell tool to click on a structure.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
data=BuildingFilter
data_area_marker=B
allow_obj_index=1
contents=%s

;96
[Order Stop]
help=Orders selected units belonging to the specified side to stop. This event does not stop structures, like turrets.__Use in combination with event type 56, "Select Unit."
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg4.name=Restore select.
arg4.type=Bool
arg4.help=Re-selects units the side had selected, if any, prior to the use of event type 56, "Select Unit." This allows you to give orders to player-owned units without disrupting the player's command of other units in the slightest. If you're not sure if you should use "Restore select." or not, just check the box and don't worry about it.
contents=%a4

;97
[Order Build Building Pick]
help=Attempts to start building the specified building type for the chosen side.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Building type
arg2.type=List
arg2.list=Item
arg2.list_type=Buildings
contents=%a2

;98
[Order Build Building Cancel]
help=Attempts to hold in-progress buildings for the chosen side.__The AI doesn't know what to do if a structure is put on hold. Make sure to eventually give it a hand in clearing or continuing its structure queue if you go messing with their sidebar.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg4.name=Force
arg4.type=Bool
arg4.help=Will place the building on hold and then cancel it. Due to a one-tick delay between hold and cancel, it isn't a totally perfect way to prevent a certain structure from being completed.
contents=%a4

;99
[Order Build Place Building]
help=Attempts to place the currently-completed building for the chosen side at the specified coordinates.__The placement of the structure can be interrupted by obstructing the space it needs to be built with units or other structures. Repeatedly fire this event and take other steps to keep the area clear if it's urgent that this event actually places the building.
coord0.name=Position
coord0.type=Point
coord0.marker=b
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides

;100
[Order Build Unit Pick]
help=Attempts to start producing the specified unit type for the chosen side.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Unit type
arg2.type=List
arg2.list=Item
arg2.list_type=Units
contents=%a2

;101
[Order Build Unit Cancel]
help=Attempts to hold in-progress units of the specified type or in the specified queue for the chosen side.__The AI doesn't know what to do if a unit is put on hold. Make sure to eventually give it a hand in clearing or continuing its unit queue if you go messing with their sidebar.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg1.name=Any unit
arg1.type=Bool
arg2.name=Unit type
arg2.type=List
arg2.list=Item
arg2.list_type=Units
arg2.showif=1=0
arg3.name=Queue
arg3.type=List
arg3.list=Custom
arg3.values=Any;Barracks;Wor;Light Factory;Heavy Factory;High Tech Factory;AT High Tech Factory;Atreides Palace;Harkonnen Palace;Ordos Palace
arg3.showif=1=1
arg4.name=Force
arg4.type=Bool
arg4.help=Will place the unit on hold and then cancel it. Due to a one-tick delay between hold and cancel, it isn't a totally perfect way to prevent a certain unit from being completed.
contents=%a1%a4%a2%a3

;102
[Order Starport Pick]
help=Attempts to request a unit of the specified type at the chosen side's Starport.__You must finalize the order with event type 104, "Order Starport Purchase."
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Unit type
arg2.type=List
arg2.list=Item
arg2.list_type=Units
contents=%a2

;103
[Order Starport Unpick]
help=Attempts to cancel the request for a unit of the specified type at the chosen side's Starport.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Unit type
arg2.type=List
arg2.list=Item
arg2.list_type=Units
contents=%a2

;104
[Order Starport Purchase]
help=Attempts to order units at the Starport for the chosen side.__You may pick the units for the order with event type 102, "Order Starport Pick."
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides

;105
[Order Starport Cancel]
help=Cancels requests for all units at the Starport menu as if you had left the menu. Does not cancel an order in progress.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides

;106
[Order Upgrade Pick]
help=Attempts to start the specified upgrade for the chosen side.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Building group
arg2.type=List
arg2.list=Item
arg2.list_type=BuildingGroups
contents=%a2

;107
[Order Upgrade Cancel]
help=Attempts to hold in-progress upgrades for the chosen side.__The AI doesn't know what to do if an upgrade is put on hold. Make sure to eventually give it a hand in clearing or continuing its upgrade queue if you go messing with their sidebar.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg4.name=Force
arg4.type=Bool
arg4.help=Will place the upgrade on hold and then cancel it. Due to a one-tick delay between hold and cancel, it isn't a totally perfect way to prevent a certain upgrade from being completed.
contents=%a4

;108
[Order Special Weapon]
help=Orders a readied special weapon for the chosen side to fire at the specified coordinates.
coord0.name=Target
coord0.type=Point
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Unit behavior
arg2.type=List
arg2.list=Game
arg2.list_type=UnitBehavior
contents=%c0 %a2

;109
[#109]

;110
[#110]

;111
[#111]

;112
[#112]

;113
[#113]

;114
[#114]

;115
[#115]

;116
[#116]

;117
[#117]

;118
[#118]

;119
[Add Radar Marker]
help=Creates a ping on the minimap at the coordinates specified.
coord0.name=Position
coord0.type=Point
arg0.name=Slot
arg0.type=Switch
arg0.values=Next free;Specific
arg0.help=_"Next free" will produce a new ping up to a maximum of 32._Using "specific" will allow you to assign a Ref. ID to the ping. Similarly to Ref. IDs on text messages, only one ping with a given Ref. ID can exist.
arg1.name=Ref. ID
arg1.type=Number
arg1.maxval=31
arg1.showif=0=1
arg3.name=Color
arg3.type=List
arg3.list=Custom
arg3.values=Red;Yellow;Green;Grey;Custom
arg3.help=Custom color is read as a hex code.
arg4.name=Thickness
arg4.type=Number
arg4.maxval=7
arg4.help=Thickness goes up to 7, which entirely fills the minimap ping's circle with color.
arg5.name=Duration
arg5.type=BigNumber
arg5.default=1
arg5.help=Duration is in ticks. 25 ticks is 1 in-game second.
arg6.name=Custom Color
arg6.type=HexNumber
arg6.showif=3=4
contents=%c0 ID: %a0 %a1 Color: %a3 %a6 Thickness: %a4 Duration: %a5 

;120
[Set Variable]
help=Adjusts the chosen variable.
arg1.name=Target var.
arg1.type=Variable
arg2.name=Offset
arg2.type=Bool
arg2.help=Allows you to dynamically choose which target variable to modify. The actual target variable will be made up as "Target var." + value of "Offset var."_For example, if you set "Target var." to Var10, check this checkbox and set "Offset var." to Var11. Then, if the value of Var11 is 5, this event will modify Var15.
arg3.name=Offset var.
arg3.type=Variable
arg3.showif=2=1
arg4.name=Operation
arg4.type=List
arg4.list=Game
arg4.list_type=ValueOperation
arg5.name=Value
arg5.type=BigNumber
contents=%a1 %a2%a3 = %a4 %a5

;121
[Get Variable]
help=Allows you to retrieve the value of a dynamically chosen variable. It works like the "Offset" parameter of the "Set Variable event"._The actual variable to be read is made up as "Src var. base" + value of "Src var. offset"._For example, set "Src var. base" to Var10 and "Src var. offset" to Var11. Then, if the value of Var11 is 5, this event will read Var15 and store its value into "Target var.".
arg2.name=Target var.
arg2.type=Variable
arg3.name=Src var. base
arg3.type=Variable
arg4.name=Src var. offset
arg4.type=Variable
contents=%a2 = base %a3 offset %a4

;122
[Set Float Variable]
help=Similar to Set Variable, but this event is for manipulating values that have been converted to floating-point numbers.
arg1.name=Target var.
arg1.type=Variable
arg2.name=Offset
arg2.type=Bool
arg2.help=Allows you to dynamically choose which target variable to modify. The actual target variable will be made up as "Target var." + value of "Offset var."_For example, if you set "Target var." to Var10, check this checkbox and set "Offset var." to Var11. Then, if the value of Var11 is 5, this event will modify Var15.
arg3.name=Offset var.
arg3.type=Variable
arg3.showif=2=1
arg4.name=Operation
arg4.type=List
arg4.list=Game
arg4.list_type=ValueOperation
arg4.help=Beware that not all operations are supported for floating-point numbers. Use only Set, Add, Substract, Multiply, MulPercent, Divide, CapMin and CapMax.
arg5.name=Value
arg5.type=Float
contents=%a1 %a2%a3 = %a4 %a5

;123
[Convert Variable]
help=Converts variables between integers and floats.
arg2.name=First var.
arg2.type=Variable
arg2.help=First variable to be converted. If you want to convert just one variable, set "First var." to that variable and set "Number of vars" to 1.
arg3.name=Number of vars
arg3.type=Number
arg3.default=1
arg3.help=Number of variables to be converted. If set to more than 1, then following variables to "First var." will be converted too. 
arg4.name=Operation
arg4.type=Switch
arg4.values=Int to Float;Float to Int
contents=%a4 %a2 (%a3 vars)

;124
[Debug Variables]
help=Displays values of one or more variables on screen.__Data is shown for a duration of 1 tick, thus this event is intended to be constantly executed in order to show real-time data.
arg2.name=First var.
arg2.type=Variable
arg3.name=Number of vars
arg3.type=Number
arg3.default=1
arg4.name=Ref. ID
arg4.type=Number
arg4.maxval=31
arg4.help=Same ref. ID as used in Show Message event. You can choose to use some unique ID to avoid interfering with other messages shown on screen.
contents=%a2 (%a3 vars) %a4

;125
[Get Random Value]
help=Generates a random number between the specified values._The randomly generated number will be output to the target variable.
arg2.name=Target var.
arg2.type=Variable
arg5.name=Min value
arg5.type=BigNumber
arg6.name=Max value
arg6.type=BigNumber
contents=%a2 = %a5 - %a6

;126
[Get Random Coords]
help=Generates random coordinates in the area you define._The X coordinate is output to the first variable you define. The Y coordinate takes up the following variable slot.
coord0.name=Area start
coord0.type=Area
coord0.marker=R
coord1.name=Area end
arg2.name=First var.
arg2.type=Variable
contents=%a2 = {%c0 : %c1}

;127
[Get Value from list]
help=Produces a value from the list provided._The value is output at the target variable.
arg1.name=Amount
arg1.type=Number
arg1.readonly=1
arg1.help=Amount of values in the list. This is set automatically when you add values to the list and cannot be changed manually.
arg2.name=Target var.
arg2.type=Variable
arg3.name=Mode
arg3.type=Switch
arg3.values=Index;Random
arg3.help=_"Index" = Get value from a specific index, the index being the value of the "Index var.". The first value in the list has index 0._"Random" = Pick just a random value from the list.
arg4.name=Index var.
arg4.type=Variable
arg4.showif=3=0
arg5.name=List type
arg5.type=List
arg5.list=Custom
arg5.values=Numbers;Unit types;Building types
data=ValueList
contents=%a2 = %a3 %a4 (%a1): %s

;128
[Get Coords from list]
help=Produces coordinates from the list provided._The X coordinate is output at the target variable ("First var."). The Y coordinate is output at the following variable ("First var." + 1).
arg1.name=Amount
arg1.type=Number
arg1.readonly=1
arg1.help=Amount of coordinates in the list. This is set automatically when you add coordinates to the list and cannot be changed manually.
arg2.name=First var.
arg2.type=Variable
arg3.name=Mode
arg3.type=Switch
arg3.values=Index;Random
arg3.help=_"Index" = Get value from a specific index, the index being the value of the "Index var.". The first value in the list has index 0._"Random" = Pick just a random value from the list.
arg4.name=Index var.
arg4.type=Variable
arg4.showif=3=0
data=CoordList
data_area_marker=I
contents=%a2 = %a3 %a4 (%a1): %s

;129
[Get Area from list]
help=Produces a set of coordinates from the list provided._The first X coordinate is output at the target variable ("First var."). The first Y coordinate takes up the following variable slot, and then the second X and Y coordinates follow respectively.
arg1.name=Amount
arg1.type=Number
arg1.readonly=1
arg1.help=Amount of areas in the list. This is set automatically when you add areas to the list and cannot be changed manually.
arg2.name=First var.
arg2.type=Variable
arg3.name=Mode
arg3.type=Switch
arg3.values=Index;Random
arg3.help=_"Index" = Get value from a specific index, the index being the value of the "Index var.". The first value in the list has index 0._"Random" = Pick just a random value from the list.
arg4.name=Index var.
arg4.type=Variable
arg4.showif=3=0
data=AreaList
data_area_marker=I
contents=%a2 = %a3 %a4 (%a1): %s

;130
[Get Unit Count]
help=Counts the amount of units belonging to the chosen side and matching the defined criteria._The count is output at the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg1.name=Target var.
arg1.type=Variable
data=UnitFilter
data_area_marker=U
contents=%a1 = %s

;131
[Get Building Count]
help=Counts the amount of buildings belonging to the chosen side and matching the defined criteria._The count is output at the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg1.name=Target var.
arg1.type=Variable
data=BuildingFilter
data_area_marker=B
contents=%a1 = %s

;132
[Get Bullet Count]
help=Counts the amount of projectiles belonging to the chosen side and matching the defined criteria._The count is output at the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg1.name=Target var.
arg1.type=Variable
data=BulletFilter
data_area_marker=P
contents=%a1 = %s

;133
[Get Explosion Count]
help=Counts the amount of explosion effects belonging to the chosen side and matching the defined criteria._The count is output at the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg1.name=Target var.
arg1.type=Variable
data=ExplosionFilter
data_area_marker=E
contents=%a1 = %s

;134
[Get Crate Count]
help=Counts the amount of crates matching the defined criteria._The count is output at the target variable.
arg1.name=Target var.
arg1.type=Variable
data=CrateFilter
data_area_marker=C
contents=%a1 = %s

;135
[Get Tile Count]
help=Counts the amount of tiles matching the defined criteria._The count is output at the target variable.
arg1.name=Target var.
arg1.type=Variable
data=TileFilter
data_area_marker=T
contents=%a1 = %s

;136
[Get Side Count]
help=Counts the amount of factions matching the defined criteria._The count is output at the target variable.
arg1.name=Target var.
arg1.type=Variable
data=SideFilter
contents=%a1 = %s

;137
[Get Spice Count]
help=Counts the amount of harvestable Spice blobs on tiles matching the defined criteria._Each regular thin Spice tile can be harvested twice. Each regular thick Spice tile counts four times._The count is output at the target variable.
arg1.name=Target var.
arg1.type=Variable
data=TileFilter
data_area_marker=T
contents=%a1 = %s

;138
[Get Damage Count]
help=Counts the amount of damage tiles matching the defined criteria have taken._Each tile can take up to 255 damage. Even if a crater cannot be produced on the tile, the damage it takes is stored as a value in the tile's data._The damage value is output at the target variable.
arg1.name=Target var.
arg1.type=Variable
data=TileFilter
data_area_marker=T
contents=%a1 = %s

;139
[#139]

;140
[Get Unit Property]
help=Outputs the specified property of the indexed unit belonging to the chosen side to the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=123
arg3.name=Index var.
arg3.type=Variable
arg4.name=Target var.
arg4.type=Variable
gamestruct_name=Unit
gamestruct_value_arg=-1
contents=%a4 = %a3 %m

;141
[Get Building Property]
help=Outputs the specified property of the indexed structure belonging to the chosen side to the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=123
arg3.name=Index var.
arg3.type=Variable
arg4.name=Target var.
arg4.type=Variable
gamestruct_name=Building
gamestruct_value_arg=-1
contents=%a4 = %a3 %m

;142
[Get Bullet Property]
help=Outputs the specified property of the indexed projectile belonging to the chosen side to the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=123
arg3.name=Index var.
arg3.type=Variable
arg4.name=Target var.
arg4.type=Variable
gamestruct_name=Bullet
gamestruct_value_arg=-1
contents=%a4 = %a3 %m

;143
[Get Explosion Property]
help=Outputs the specified property of the indexed explosion effect belonging to the chosen side to the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=123
arg3.name=Index var.
arg3.type=Variable
arg4.name=Target var.
arg4.type=Variable
gamestruct_name=Explosion
gamestruct_value_arg=-1
contents=%a4 = %a3 %m

;144
[Get Crate Property]
help=Outputs the specified property of the indexed crate to the target variable.
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=123
arg3.name=Index var.
arg3.type=Variable
arg4.name=Target var.
arg4.type=Variable
gamestruct_name=Crate
gamestruct_value_arg=-1
contents=%a4 = %a3 %m

;145
[Get Tile Property]
help=Outputs the specified property of the indexed tile to the target variable.
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=123
arg3.name=First var.
arg3.type=Variable
arg4.name=Target var.
arg4.type=Variable
gamestruct_name=Tile
gamestruct_value_arg=-1
contents=%a4 = %a3 %m

;146
[Get Side Property]
help=Outputs the specified property of the chosen side to the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
arg4.name=Target var.
arg4.type=Variable
;arg5.name=Offset
;arg5.type=BigNumber
gamestruct_name=Side
gamestruct_offset_arg=5
gamestruct_value_arg=-1
contents=%a4 = %m

;147
[Get AI Property]
help=Outputs the specified property of the chosen side's AI to the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
arg4.name=Target var.
arg4.type=Variable
;arg5.name=Offset
;arg5.type=BigNumber
gamestruct_name=AI
gamestruct_offset_arg=5
gamestruct_value_arg=-1
contents=%a4 = %m

;148
[Get Memory Data]
help=Outputs the desired memory data at the specified address to the target variable.
arg1.name=Data type
arg1.type=List
arg1.list=Game
arg1.list_type=DataType
arg4.name=Target var.
arg4.type=Variable
arg5.name=Address
arg5.type=HexNumber
contents=%a4 = %a1 %a5

;149
[#149]

;150
[Get Unit Template Property]
help=Outputs the specified property of the chosen unit type to the target variable.__To refer to unit templates, refer to the Structures Editor.
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=123
arg3.name=Unit type
arg3.type=List
arg3.list=Item
arg3.list_type=Units
arg4.name=Target var.
arg4.type=Variable
gamestruct_name=UnitTemplate
contents=%a4 = %a3 %m

;151
[Get Building Template Property]
help=Outputs the specified property of the chosen structure type to the target variable.__To refer to structure templates, refer to the Structures Editor.
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=123
arg3.name=Building type
arg3.type=List
arg3.list=Item
arg3.list_type=Buildings
arg4.name=Target var.
arg4.type=Variable
gamestruct_name=BuildingTemplate
contents=%a4 = %a3 %m

;152
[Get Weapon Template Property]
help=Outputs the specified property of the chosen weapon type to the target variable.__To refer to weapon templates, refer to the Structures Editor.
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=123
arg3.name=Weapon type
arg3.type=List
arg3.list=Item
arg3.list_type=Weapons
arg4.name=Target var.
arg4.type=Variable
gamestruct_name=WeaponTemplate
contents=%a4 = %a3 %m

;153
[Get Explosion Template Property]
help=Outputs the specified property of the chosen explosion effect type to the target variable.__To refer to explosion effect templates, refer to the Structures Editor.
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=123
arg3.name=Explosion type
arg3.type=List
arg3.list=Item
arg3.list_type=Explosions
arg4.name=Target var.
arg4.type=Variable
gamestruct_name=ExplosionTemplate
contents=%a4 = %a3 %m

;154
[Get Armour Value]
help=Outputs the warhead-versus-armour value of the chosen armour type and warhead type to the target variable.__To refer to warhead-versus-armour values, refer to the Structures Editor, Armour tab.
arg1.name=Armour type
arg1.type=List
arg1.list=Item
arg1.list_type=ArmourTypes
arg2.name=Select by
arg2.type=Switch
arg2.values=Weapon;Warhead
arg2.help=For Weapon, it uses the weapon's warhead type. For Warhead, it uses the warhead type directly.
arg3.name=Weapon type
arg3.type=List
arg3.list=Item
arg3.list_type=Weapons
arg3.showif=2=0
arg4.name=Warhead type
arg4.type=List
arg4.list=Item
arg4.list_type=Warheads
arg4.showif=2=1
arg5.name=Target var.
arg5.type=Variable
contents=%a5 = Armour %a1 , %a2 %a3%a4

;155
[Get Speed Value]
help=Outputs the speed value of the movement type on the specified terrain to the target variable. This is floating-point number.
arg1.name=Vehicle type
arg1.type=List
arg1.list=Item
arg1.list_type=SpeedTypes
arg2.name=Terrain type
arg2.type=Number
arg2.maxval=7
arg3.name=Target var.
arg3.type=Variable
contents=%a3 = Vehicle %a1 , Terrain %a2

;156
[Get Group ID Value]
help=Outputs desired group ID to the target variable.__To refer to group ID values, refer to the Structures Editor, Other tab.
arg1.name=What
arg1.type=List
arg1.list=Game
arg1.list_type=GroupIDs
arg2.name=Target var.
arg2.type=Variable
contents=%a2 = %a1

;157
[#157]

;158
[Get Unit Type]
help=Outputs a unit type ID matching the defined criteria to the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg0.showif=3=1
arg1.name=Target var.
arg1.type=Variable
arg3.name=My version only
arg3.type=Bool
arg3.help=Produces only those that apply to the chosen side's faction. For example, it will only output the Atreides Combat Tank's type ID for a side using house ID 0 if looking for units that are Group=Combat Tank.
arg4.name=Method
arg4.type=Switch
arg4.Values=First;Random
arg4.help=First outputs the first unit type that matches the criteria. Random outputs any of unit types that match the criteria.
data=UnitTypeFilter
contents=%a1 = %a3 %a4 %s

;159
[Get Building Type]
help=Outputs a building type ID matching the defined criteria to the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg0.showif=3=1
arg1.name=Target var.
arg1.type=Variable
arg3.name=My version only
arg3.type=Bool
arg3.help=Produces only those that apply to the chosen side's faction. For example, it will only output the Atreides Wind Trap's type ID for a side using house ID 0 if looking for structures that are Group=Wind Trap.
arg4.name=Method
arg4.type=Switch
arg4.Values=First;Random
arg4.help=First outputs the first building type that matches the criteria. Random outputs any of building types that match the criteria.
data=BuildingTypeFilter
contents=%a1 = %a3 %a4 %s

;160
[Get Game Ticks]
help=Outputs the game session length in ticks to the target variable.
arg4.name=Target var.
arg4.type=Variable
contents=%a4

;161
[Get My Side ID]
help=Outputs the side ID of side controlled by player to the target variable.__This is not for reading house ID. For that purpose, use event type 166, "Get House ID."
arg4.name=Target var.
arg4.type=Variable
contents=%a4

;162
[Get Difficulty]
help=Outputs the difficulty setting selected by the player to the target variable._Easy is 0, Normal is 1, Hard is 2.
arg4.name=Target var.
arg4.type=Variable
contents=%a4

;163
[Get Rule]
help=Outputs the desired game rule to the target variable.__To refer to game rules, open Mission Settings (default: F10) and examine the list in the bottom left corner.
arg2.name=Rule
arg2.type=List
arg2.list=Game
arg2.list_type=Rules
arg4.name=Target var.
arg4.type=Variable
contents=%a4 = %a2

;164
[Get Diplomacy]
help=Outputs the diplomacy status of the source side towards the target side to the target variable._Ally is 0, Enemy is 1, Neutral is 2.
arg0.name=Source
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Target
arg2.type=List
arg2.list=Item
arg2.list_type=Sides
arg4.name=Target var.
arg4.type=Variable
contents=%a4 = %a0 -> %a2

;165
[Get Tech]
help=Outputs the tech level of the specified side to the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg4.name=Target var.
arg4.type=Variable
contents=%a4

;166
[Get House ID]
help=Outputs the house ID of the specified side to the target variable.__To refer to house IDs, open Mission Settings (default: F10).
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg4.name=Target var.
arg4.type=Variable
contents=%a4

;167
[#167]

;168
[Get Credits]
help=Outputs the desired credits-related value belonging to the specified side to the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg3.name=What
arg3.type=List
arg3.list=Custom
arg3.values=Total;Spice;Cash;Max storage
arg3.help=_Total: Total credits, as shown in game. Sum of Spice and cash._Spice: Amount of Spice stored in Refineries and Silos._Cash: Excess credits above stored Spice._Max storage: How much Spice can be held by all Refineries and Silos.
arg4.name=Target var.
arg4.type=Variable
contents=%a4 = %a3

;169
[Get Power]
help=Outputs the desired power-related value pertaining to the specified side to the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg3.name=What
arg3.type=List
arg3.list=Custom
arg3.values=Percent;Total output;Total drain;Extra output;Extra drain
arg3.help=_Percent: Power percentage, as shown in-game._Total output: Sum of power produced by Wind Traps, Construction Yards, etc._Total drain: Sum of power consumed by buildings._Extra output: Excess power above the need. It's computed as Output - Drain. If low on power, this value is negative._Extra drain: How much power is missing to fulfill the need. It's computed as Drain - Output. If more than enough power, this value is negative.
arg4.name=Target var.
arg4.type=Variable
contents=%a4 = %a3

;170
[Get Building Upgrades]
help=Outputs the building group's upgrade level for the specified side to the target variable._Maximum upgrade level is 3.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Building group
arg2.type=List
arg2.list=Item
arg2.list_type=BuildingGroups
arg4.name=Target var.
arg4.type=Variable
contents=%a4 = %a2

;171
[Get Starport Stock]
help=Outputs the amount of the chosen unit type in stock in the specified side's Starport menu to the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Unit type
arg2.type=List
arg2.list=Item
arg2.list_type=Units
arg4.name=Target var.
arg4.type=Variable
contents=%a4 = %a2

;172
[Get Starport Cost]
help=Outputs the current cost for the chosen unit type in the specified side's Starport menu to the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Unit type
arg2.type=List
arg2.list=Item
arg2.list_type=Units
arg4.name=Target var.
arg4.type=Variable
contents=%a4 = %a2

;173
[Get Starport Pick]
help=Outputs how many of the chosen unit type the specified side has selected in their Starport menu to the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Unit type
arg2.type=List
arg2.list=Item
arg2.list_type=Units
arg4.name=Target var.
arg4.type=Variable
contents=%a4 = %a2

;174
[Get Building Queue State]
help=Outputs the desired building queue property of the specified side to the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=123
arg4.name=Target var.
arg4.type=Variable
gamestruct_name=BuildQueue
gamestruct_value_arg=-1
contents=%a4 = %m

;175
[Get Unit Queue State]
help=Outputs the desired unit queue property of the specified side to the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=123
arg3.name=Queue
arg3.type=List
arg3.list=Custom
arg3.values=ByNumber;Barracks;Wor;Light Factory;Heavy Factory;High Tech Factory;AT High Tech Factory;Atreides Palace;Harkonnen Palace;Ordos Palace
arg3.help=The game has up to 10 unit queues. Any queue can be assigned to any factory type._ByNumber gets the property of a queue by its number, regardless of which factory that queue is for._Other options will get the property for specific factory's queue.
arg4.name=Queue num.
arg4.type=Number
arg4.maxval=9
arg4.showif=3=0
arg5.name=Target var.
arg5.type=Variable
gamestruct_name=BuildQueue
gamestruct_value_arg=-1
contents=%a5 = %a3%a4 %m

;176
[Get Upgrade Queue State]
help=Outputs the desired upgrade queue property of the specified side to the target variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=123
arg4.name=Target var.
arg4.type=Variable
gamestruct_name=BuildQueue
gamestruct_value_arg=-1
contents=%a4 = %m

;177
[Get Spice Harvested]
help=Outputs the amount of Spice the specified side has harvested to the target variable.__It doesn't matter if the side spends any of that wealth. This value does not decrease. It goes up by increments of 100 each time a blob is emptied by a Harvester into the Refinery. This value rises even if there's no room for the Spice in the side's storage. It's unaffected by event types 8 and 40, "Set Cash" and "Transfer Credits" respectively.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg4.name=Target var.
arg4.type=Variable
contents=%a4

;178
[Get Units Built]
help=Outputs the amount of total or specific units built by the chosen side to the target variable.__Starting units, units added through reinforcement or Starport deliveries, unit spawns, add unit events, etc. are all counted towards this value.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Unit type
arg2.type=List
arg2.list=Item
arg2.list_type=Units
arg2.showif=3=0
arg3.name=Total
arg3.type=Bool
arg4.name=Target var.
arg4.type=Variable
contents=%a4 = %a2%a3

;179
[Get Buildings Built]
help=Outputs the amount of total or specific buildings constructed by the chosen side to the target variable.__Starting structures, structures added through add building events, captured structures, etc. are all counted towards this value.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Bld. type
arg2.type=List
arg2.list=Item
arg2.list_type=Buildings
arg2.showif=3=0
arg3.name=Total
arg3.type=Bool
arg4.name=Target var.
arg4.type=Variable
contents=%a4 = %a2%a3

;180
[Get Units Lost]
help=Outputs the amount of total or specific units lost by the chosen side to the target variable.__Engineers or Saboteurs that infiltrate structures are counted as lost when they despawn.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Unit type
arg2.type=List
arg2.list=Item
arg2.list_type=Units
arg2.showif=3=0
arg3.name=Total
arg3.type=Bool
arg4.name=Target var.
arg4.type=Variable
contents=%a4 = %a2%a3

;181
[Get Buildings Lost]
help=Outputs the total amount of buildings lost by the chosen side to the target variable.__Sold structures don't count, but a structure captured by another side's Engineer does count as a structure lost.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg4.name=Target var.
arg4.type=Variable
contents=%a4

;182
[Get Units Killed]
help=Outputs the total amount of units or the amount of specific units belonging to the designated enemy side that were killed by the chosen primary side to the target variable.__A deviated unit killed while belonging to another side does not count as a loss for the original side.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg1.name=Enemy
arg1.type=List
arg1.list=Item
arg1.list_type=Sides
arg1.showif=3=0
arg2.name=Unit type
arg2.type=List
arg2.list=Item
arg2.list_type=Units
arg2.showif=3=0
arg3.name=Total
arg3.type=Bool
arg4.name=Target var.
arg4.type=Variable
contents=%a4 = %a1 %a2%a3

;183
[Get Buildings Killed]
help=Outputs the total amount of structures or the amount of specific structures belonging to the designated enemy side that were killed by the chosen primary side to the target variable.__Capturing a building counts as 'killing' it.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg1.name=Enemy
arg1.type=List
arg1.list=Item
arg1.list_type=Sides
arg1.showif=3=0
arg2.name=Bld. type
arg2.type=List
arg2.list=Item
arg2.list_type=Buildings
arg2.showif=3=0
arg3.name=Total
arg3.type=Bool
arg4.name=Target var.
arg4.type=Variable
contents=%a4 = %a1 %a2%a3

;184
[Get Mouse Position]
help=Outputs the mouse position to the designated variable._If coordinates should be output, X coordinate is stored into the variable specified as First var., Y coordinate is stored into the following variable.
arg2.name=What
arg2.type=List
arg2.list=Custom
arg2.values=Absolute;Map Pixel;Map Tile;Radar Position;Building Icon;Unit Icon;Starport Icon;Upgrade Icon
arg2.help=_Absolute: The absolute mouse position on screen. The top-left pixel of the game's window is 0,0._Map Pixel: Map coordinates, in pixels. If the cursor is outside the playable area, -1,-1 is output._Map Tile: Map coordinates, in tiles (pixels / 32). If the cursor is outside the playable area, -1,-1 is output._Radar Position: Position of cursor on the radar map, otherwise -1,-1. Works only when radar is shown._Building Icon: Number of building icon the cursor is on, otherwise -1._Unit Icon: Number of unit icon the cursor is on, otherwise -1._Starport Icon: Number of starport unit icon the cursor is on, otherwise -1._Upgrade Icon: Number of upgrade building icon the cursor is on, otherwise -1.
arg3.name=First var.
arg3.type=Variable
contents=%a3 = %a2

;185
[Get Keyboard/Mouse State]
help=Outputs the status of the chosen mouse button or keyboard key to the target variable._0 = key is not pressed, 1 = key is pressed.
arg2.name=Target var.
arg2.type=Variable
arg3.name=Key
arg3.type=List
arg3.list=Game
arg3.list_type=KeyboardKey
contents=%a2 = %a3

;186
[Get Unit Under Cursor]
help=If a unit is currently under the mouse cursor, unit's side and index are output into respective variables. Otherwise -1,-1 is output.
arg2.name=Side var.
arg2.type=Variable
arg3.name=Index var.
arg3.type=Variable
arg4.name=Ignore shroud
arg4.type=Bool
arg4.help=Outputs also units which are hidden behind shroud.
arg5.name=Ignore stealth
arg5.type=Bool
arg5.help=Outputs also units which are cloaked and invisible.
contents=%a2, %a3 %a4%a5

;187
[Get Building Under Cursor]
help=If a building is currently under the mouse cursor, building's side and index are output into respective variables. Otherwise -1,-1 is output.
arg2.name=Side var.
arg2.type=Variable
arg3.name=Index var.
arg3.type=Variable
arg4.name=Ignore shroud
arg4.type=Bool
arg4.help=Outputs also buildings which are hidden behind shroud.
contents=%a2, %a3 %a4

;188
[Get Sidebar Button Under Cursor]
help=Outputs 1 to the target variable if the mouse cursor is above a specific sidebar button, otherwise returns 0.
arg2.name=Button
arg2.type=List
arg2.list=Custom
arg2.values=Up arrow 1;Down arrow 1;Up arrow 2;Down arrow 2;Repair;Sell;Map toggle;Guard;Retreat;Upgrade;Starport;Options;Main 1;Main 2;Purchase
arg3.name=Target var.
arg3.type=Variable
arg4.name=Click on it
arg4.type=Bool
arg4.help=Changes the button to clicked state.
contents=%a3 = %a2 %a4

;189
[Get Game Interface Data]
help=Outputs desired game interface data to the target variable.__Sidebar Mode: 1 = normal, 2 = starport menu, 3 = upgrade menu_Sidebar Button: 0 = normal, 1 = building placement, 2 = repair, 3 = sell, 4 = Airstrike, 5 = Death Hand_Radar State: 1 if score is shown (in multiplayer), otherwise 0_Can Place Building: 1 if selected building can be placed on current position, otherwise 0_Radar Online: 1 if radar is active, otherwise 0
;arg1.name=Data type
;arg1.type=List
;arg1.list=Game
;arg1.list_type=DataType
;arg2.name=Offset
;arg2.type=Number
;arg2.maxval=123
arg3.name=Target var.
arg3.type=Variable
gamestruct_name=TacticalStruct
gamestruct_value_arg=-1
contents=%a3 = %m

;190
[Get Object Position]
help=Outputs the position of an object, which can be a unit, building, projectile or explosion effect. The object is identified by side ID and index._X-coordinate is stored into the variable specified as "Target var.", Y-coordinate is stored into the following variable._You can choose whether you want to get the position in map pixels or tile coordinates.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg2.name=Index var.
arg2.type=Variable
arg3.name=Format
arg3.type=Switch
arg3.values=Pixels;Tiles
arg4.name=Target var.
arg4.type=Variable
contents=%a4 = side: %a0 index: %a2 format: %a3

;191
[Get Angle]
help=Outputs an angle of direction pointing from the first coordinates towards the second coordinates._Angle is a number between 0 and 31, where 0 is upwards, 8 is right, 16 is down and 24 is left._The first X-coodinate must be stored in "1st pos. var.", the first Y-coordinate in the following variable. Same for the "2nd pos. var.". The result is output in "Target var.".
arg2.name=1st pos. var.
arg2.type=Variable
arg3.name=2nd pos. var.
arg3.type=Variable
arg4.name=Target var.
arg4.type=Variable
contents=%a4 = %a2 -> %a3

;192
[Get Position on Circle]
help=Outputs the resulting coordinates on a circle. You specify the center coordinates of the circle, an angle, and a radius._The center X-coordinate must be stored in "Center pos. var.". the Y-coordinate in the following variable._Angle is a number between 0 and 31, where 0 is upwards, 8 is right, 16 is down and 24 is left._The resulting X-coordinate is stored into the variable specified as "Target var." while the resulting Y-coordinate is stored into the following variable.
arg1.name=Center pos. var.
arg1.type=Variable
arg4.name=Angle
arg4.type=Number
arg4.maxval=31
arg5.name=Radius
arg5.type=Number
arg5.maxval=511
arg6.name=Target var.
arg6.type=Variable
contents=%a6 = center: %a1 dir: %a4 radius: %a5

;193
[Get Nearest Building Tile]
help=Outputs the coordinates of a building's tile closest to the specified coordinates._The building in question is identified by its side ID and index._The from-position, for which we look for the nearest building tile, should be specified in map pixels. The X-coordinate must be stored in "From pos. var.", the Y-coordinate in the following variable._The resulting nearest building tile can be output in either map pixels or tile coordinates. The resulting X-coordinate is stored into the variable specified as "Target var." while the resulting Y-coordinate is stored into the following variable.
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=Sides
arg1.name=Index var.
arg1.type=Variable
arg2.name=From pos. var.
arg2.type=Variable
arg3.name=Format
arg3.type=Switch
arg3.values=Pixels;Tiles
arg4.name=Target var.
arg4.type=Variable
contents=%a4 = side: %a0 index: %a1 from pos: %a2 format: %a3

;194
[Get Distance]
help=Outputs the distance between two points._The first X-coodinate must be stored in "1st pos. var.", the first Y-coordinate in the following variable. Same for the "2nd pos. var."._The resulting distance is stored in "Target var."._You can choose whether you want to get the squared or actual distance. Actual distance is the real distance. For its computation, a Square Root operation is done, which can take some CPU power. Squared distance is the result without Square Root operation. If you do not need to know the absolute real distance, but are for example looking for the minimum/maximum distance, use Squared to save some CPU power.
arg1.name=1st pos. var.
arg1.type=Variable
arg2.name=2nd pos. var.
arg2.type=Variable
arg3.name=Mode
arg3.type=Switch
arg3.values=Squared;Actual
arg4.name=Target var.
arg4.type=Variable
contents=%a4 = %a1 -> %a2 (%a3)

;195
[Check Distance]
help=Checks for distance between two points. If the distance between two points is less than or equal to the value specified, 1 is output, otherwise, 0._The first X-coodinate must be stored in "1st pos. var.", the first Y-coordinate in the following variable. Same for the "2nd pos. var."._The result of this comparison is stored in "Target var.".
arg1.name=1st pos. var.
arg1.type=Variable
arg2.name=2nd pos. var.
arg2.type=Variable
arg5.name=Distance
arg5.type=BigNumber
arg6.name=Target var.
arg6.type=Variable
contents=%a6 = %a1 -> %a2 (%a5)

;196
[#196]

;197
[#197]

;198
[#198]

;199
[#199]

;200
[#200]

;201
[#201]

;202
[#202]

;203
[#203]

;204
[#204]

;205
[#205]

;206
[#206]

;207
[#207]

;208
[#208]

;209
[#209]

;210
[#210]

;211
[#211]

;212
[#212]

;213
[#213]

;214
[#214]

;215
[#215]

;216
[#216]

;217
[#217]

;218
[#218]

;219
[#219]

;220
[#220]

;221
[#221]

;222
[#222]

;223
[#223]

;224
[#224]

;225
[#225]

;226
[#226]

;227
[#227]

;228
[#228]

;229
[#229]

;230
[#230]

;231
[#231]

;232
[#232]

;233
[Callable Block Start]
help=Begins a block of events, which can be executed with event 235 "Execute Block"._Block must be ended with event 255 "End".
color=$E1EAFF
is_start_block=1

;234
[Hook Block Start]
help=Begins a block of events, which is executed from game's code (different places, based on hook type) and allows you to inject your own logic to tweak game behavior and mechanics._When a hook block is executed, several variables (starting from variable 0) are given special purposes. Their names will begin with the "#" character. You can read those variables._Furthermore, some variables (usually variable 0) are treated as output variables. Their names will begin with "#>" characters. You can write a value to them to override the game logic's result to your own logic result._Block must be ended with event 255 "End".
arg1.name=Hook type
arg1.type=List
arg1.list=Custom
arg1.values=Setupmapstuff;Keyboard/Mouse Down;Keyboard/Mouse Up;Set Mouse Cursor;Handle Tooltip;Pre Update Unit;Post Update Unit;Pre Update Building;Post Update Building;Pre Update Bullet;Post Update Bullet;Pre Update Explosion;Post Update Explosion;Get Unit Build Speed Percentage;Get Building Build Speed Percentage;Get Unit Cost;Get Building Cost;Can Unit Use Square
color=$E1EAFF
is_start_block=1
contents=%a1

;235
[Execute Block]
help=Executes a callable block (event 233 "Callable Block Start").
arg5.name=Event
arg5.type=Number
arg5.maxval=1023
arg5.reference=Event
color=$FFEAE1
contents=%a5

;236
[Exit from Block]
help=Quit execution of current block (i.e. callable block, hook block).
color=$FFEAFF

;237
[If]
help=Begins a block of events, which is executed only if the conditional expression is evaluated true._The conditional expression may consist of 1 to 8 variable value checks (equal, not equal, greater, less, bit set, bit not set) joined by AND and OR operators. Alternatively, it can be a check for an object's properties. Object can be a unit, structure, etc. and is identified by its side and index._The block must be ended with event 255, "End", but preceding that you may use event 238, "Else If" or event 239, "Else" to introduce other scenarios that can run if the first conditional expression is evaluated false.
arg1.name=Condition type
arg1.type=List
arg1.list=Custom
arg1.values=Expression;Check Unit;Check Building;Check Bullet;Check Explosion;Check Crate;Check Tile;Check Side;Check Unit Type;Check Building Type
arg2.name=Side
arg2.type=Variable
arg2.showif=1>0
arg3.name=Obj. Index
arg3.type=Variable
arg3.showif=1>0
data=CondExpr
color=$EAFFE1
is_start_block=1
contents=%a1: %a2 %a3 %s

;238
[Else If]
help=Must follow after a block started by "If" or "Else If" event. Begins a block of events, which is executed only if all the previous "If" or "Else If" conditions were evaluated false, and this event's conditional expression is evaluated true._The conditional expression works the same way as for the "If" event._Block must be ended with either event 255 "End", event 238 "Else If" or event 239 "Else".__For example a chain of conditional events can be made like this: "If - Else If - Else If - ... - Else If - Else" where the first conditional block in chain which evaluates true will execute. If none of conditions evaluate true, then "Else" block will execute. The "Else" block is not mandatory.
arg1.name=Condition type
arg1.type=List
arg1.list=Custom
arg1.values=Expression;Check Unit;Check Building;Check Bullet;Check Explosion;Check Crate;Check Tile;Check Side;Check Unit Type;Check Building Type
arg2.name=Side
arg2.type=Variable
arg2.showif=1>0
arg3.name=Obj. Index
arg3.type=Variable
arg3.showif=1>0
data=CondExpr
color=$EAFFE1
contents=%a1: %a2 %a3 %s

;239
[Else]
help=Must follow after a block started by "If" or "Else If" event. Begins a block of events, which is executed only if all the previous "If" or "Else If" conditions were evaluated false._Block must be ended with event 255 "End".__For example a chain of conditional events can be made like this: "If - Else If - Else If - ... - Else If - Else" where the first conditional block in chain which evaluates true will execute. If none of conditions evaluate true, then "Else" block will execute.
color=$EAFFE1

;240
[Loop While]
help=Begins a block of events which is executed repeatedly while its conditional expression is evaluated true._Loop-type event blocks will execute repeatedly in a single tick for each iteration._The conditional expression works the same way as for event type 237, "If"._Block must be ended with event type 255, "End".__More detailed description: Before the first execution, the conditional expression is evaluated and if it's true, the block is executed. After the block is executed, the conditional expression is evaluated again, and if it's true, the block is executed again. This will repeat infinitely, until the conditional expression is evaluated false._Make sure to modify the expression variables within the block, otherwise the block will execute infinitely and the game will crash. Alternatively, the loop can be forcefully ended by event type 253, "Break Loop".
data=CondExpr
color=$EAFFE1
is_start_block=1
contents=%s

;241
[Loop Values from Range]
help=Begins a block of events which is executed repeatedly for every integer within the given range (Min value to Max value). In each iteration, the "Loop var." is set to that value._Loop-type event blocks will execute repeatedly in a single tick for each iteration._Block must be ended with event type 255, "End".
arg2.name=Loop var.
arg2.type=Variable
arg5.name=Min value
arg5.type=BigNumber
arg6.name=Max value
arg6.type=BigNumber
color=$EAFFE1
is_start_block=1
contents=%a2 = %a5 - %a6

;242
[Loop Coords from Area]
help=Begins a block of events which is executed repeatedly for every set of coordinates from the given area. For example, if a 5*5 area is selected, the block is executed 25 times. In each iteration, the "First var." is set to X coordinate, and the following variable is set to Y coordinate._Loop-type event blocks will execute repeatedly in a single tick for each iteration._Block must be ended with event type 255, "End".
coord0.name=Area start
coord0.type=Area
coord0.marker=L
coord1.name=Area end
arg2.name=First var.
arg2.type=Variable
color=$EAFFE1
is_start_block=1
contents=%a2 = {%c0 : %c1}

;243
[Loop Values from List]
help=Begins a block of events which is executed repeatedly for every value from the given list. In each iteration, the "Loop var." is set to that value._Loop-type event blocks will execute repeatedly in a single tick for each iteration._Block must be ended with event type 255, "End".
arg1.name=Amount
arg1.type=Number
arg1.readonly=1
arg2.name=Loop var.
arg2.type=Variable
arg5.name=List type
arg5.type=List
arg5.list=Custom
arg5.values=Numbers;Unit types;Building types
data=ValueList
color=$EAFFE1
is_start_block=1
contents=%a2 = (%a1): %s

;244
[Loop Coords from List]
help=Begins a block of events which is executed repeatedly for every set of coordinates from the given list. In each iteration, the "First var." is set to X coordinate, and the following variable is set to Y coordinate._Loop-type event blocks will execute repeatedly in a single tick for each iteration._Block must be ended with event type 255, "End".
arg1.name=Amount
arg1.type=Number
arg1.readonly=1
arg2.name=First var.
arg2.type=Variable
data=CoordList
data_area_marker=I
color=$EAFFE1
is_start_block=1
contents=%a2 = (%a1): %s

;245
[Loop Areas from List]
help=Begins a block of events which is executed repeatedly for every area from the given list. In each iteration, the "First var." is set to top-left X coordinate, and the following three variables are set to top-left Y coordinate, bottom-right X and Y coordinates._Loop-type event blocks will execute repeatedly in a single tick for each iteration._Block must be ended with event type 255, "End".
arg1.name=Amount
arg1.type=Number
arg1.readonly=1
arg2.name=First var.
arg2.type=Variable
data=AreaList
data_area_marker=I
color=$EAFFE1
is_start_block=1
contents=%a2 = (%a1): %s

;246
[Loop Units]
help=Begins a block of events which is executed repeatedly for every unit that falls under the criteria you define. In each iteration, the "Side var." is set to the unit's side and "Index var." is set to unit's index._Loop-type event blocks will execute repeatedly in a single tick for each iteration._Block must be ended with event type 255, "End".
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg1.name=Side var.
arg1.type=Variable
arg2.name=Index var.
arg2.type=Variable
data=UnitFilter
data_area_marker=U
color=$EAFFE1
is_start_block=1
contents=%a1 , %a2 = %s

;247
[Loop Buildings]
help=Begins a block of events which is executed repeatedly for every building that falls under the criteria you define. In each iteration, the "Side var." is set to the buildding's side and "Index var." is set to buildding's index._Loop-type event blocks will execute repeatedly in a single tick for each iteration._Block must be ended with event type 255, "End".
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg1.name=Side var.
arg1.type=Variable
arg2.name=Index var.
arg2.type=Variable
data=BuildingFilter
data_area_marker=B
color=$EAFFE1
is_start_block=1
contents=%a1 , %a2 = %s

;248
[Loop Bullets]
help=Begins a block of events which is executed repeatedly for every bullet that falls under the criteria you define. In each iteration, the "Side var." is set to the bullet's side and "Index var." is set to bullet's index._Loop-type event blocks will execute repeatedly in a single tick for each iteration._Block must be ended with event type 255, "End".
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg1.name=Side var.
arg1.type=Variable
arg2.name=Index var.
arg2.type=Variable
data=BulletFilter
data_area_marker=P
color=$EAFFE1
is_start_block=1
contents=%a1 , %a2 = %s

;249
[Loop Explosions]
help=Begins a block of events which is executed repeatedly for every explosion that falls under the criteria you define. In each iteration, the "Side var." is set to the explosion's side and "Index var." is set to explosion's index._Loop-type event blocks will execute repeatedly in a single tick for each iteration._Block must be ended with event type 255, "End".
arg0.name=Side
arg0.type=List
arg0.list=Item
arg0.list_type=SidesAny
arg1.name=Side var.
arg1.type=Variable
arg2.name=Index var.
arg2.type=Variable
data=ExplosionFilter
data_area_marker=E
color=$EAFFE1
is_start_block=1
contents=%a1 , %a2 = %s

;250
[Loop Crates]
help=Begins a block of events which is executed repeatedly for every crate that falls under the criteria you define. In each iteration, the "Index var." is set to crate's index._Loop-type event blocks will execute repeatedly in a single tick for each iteration._Block must be ended with event type 255, "End".
arg1.name=Index var.
arg1.type=Variable
data=CrateFilter
data_area_marker=C
color=$EAFFE1
is_start_block=1
contents=%a1 = %s

;251
[Loop Tiles]
help=Begins a block of events which is executed repeatedly for every tile that falls under the criteria you define. In each iteration, the "First var." is set to tile's X coordinate and the following variable is set to tile's Y coordinate._Loop-type event blocks will execute repeatedly in a single tick for each iteration._Block must be ended with event type 255, "End".
arg1.name=First var.
arg1.type=Variable
data=TileFilter
data_area_marker=T
color=$EAFFE1
is_start_block=1
contents=%a1 = %s

;252
[Loop Sides]
help=Begins a block of events which is executed repeatedly for every side that falls under the criteria you define. In each iteration, the "Target var." is set to side ID._Loop-type event blocks will execute repeatedly in a single tick for each iteration._Block must be ended with event type 255, "End".
arg1.name=Target var.
arg1.type=Variable
data=SideFilter
color=$EAFFE1
is_start_block=1
contents=%a1 = %s

;253
[Break Loop]
help=Forcefully terminates execution of the whole loop. The current loop's iteration will end, and no more iterations will execute.
color=$FFEAFF

;254
[Continue Loop]
help=Forcefully terminates execution of the current loop's iteration. The next iterations will still execute.
color=$FFEAFF

;255
[End]
help=Ends a block._Make sure there's no missing or excess End event, which would cause the mission to not be playable.
color=$D5F7C6

[Categories]
General=0
Side operations=40
AI operations=46
Memory operations=48
Unit operations=50
Building operations=60
Bullet operations=68
Explosion operations=69
Crate operations=70
Tile operations=74
Orders=80
Miscellaneous=119
Variable operations=120
Get object count=130
Get object property=140
Get template preperty=150
Get generic property=160
Get side property=165
Get controls/UI=184
Positional operations=190
Blocks=233
Loops=240
End block=255

